{"version":3,"file":"snackbar.cjs.production.min.js","sources":["../src/SnackbarContext.ts","../src/utils/index.ts","../src/transitions/Transition/Transition.tsx","../src/transitions/useForkRef.ts","../src/transitions/getTransitionProps.ts","../src/transitions/utils.ts","../src/transitions/createTransition.ts","../src/transitions/Slide/Slide.tsx","../src/utils/defaultIconVariants.tsx","../src/SnackbarProvider/merger.ts","../src/utils/styles.ts","../src/transitions/Collapse/Collapse.tsx","../src/SnackbarItem/utils.ts","../src/utils/createChainedFunction.ts","../src/utils/useEventCallback.ts","../src/SnackbarItem/Snackbar.tsx","../src/SnackbarContent/SnackbarContent.tsx","../src/ui/MaterialDesignContent/MaterialDesignContent.tsx","../src/SnackbarItem/SnackbarItem.tsx","../src/SnackbarContainer/SnackbarContainer.tsx","../src/SnackbarProvider/SnackbarProvider.tsx","../src/useSnackbar.ts"],"sourcesContent":["import React from 'react';\nimport { ProviderContext } from './types';\n\nconst noOp = () => {\n  return '';\n};\n\nexport default React.createContext<ProviderContext>({\n  enqueueSnackbar: noOp,\n  closeSnackbar: noOp\n});\n","import { InternalSnack } from '../types';\n\nexport const breakpoints = {\n  downXs: '@media (max-width:599.95px)',\n  upSm: '@media (min-width:600px)'\n};\n\nconst capitalise = (text: string): string => text.charAt(0).toUpperCase() + text.slice(1);\n\nexport const originKeyExtractor = (anchor: InternalSnack['anchorOrigin']): string =>\n  `${capitalise(anchor.vertical)}${capitalise(anchor.horizontal)}`;\n\nexport const isDefined = (value: string | null | undefined | number): boolean => !!value || value === 0;\n","/**\n * BSD 3-Clause License\n *\n * Copyright (c) 2018, React Community\n * Forked from React (https://github.com/facebook/react) Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * * Neither the name of the copyright holder nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport React from 'react';\nimport { TransitionComponentProps, TransitionStatus } from '../../types';\n\nconst UNMOUNTED = 'unmounted';\nconst EXITED = 'exited';\nconst ENTERING = 'entering';\nconst ENTERED = 'entered';\nconst EXITING = 'exiting';\n\ninterface State {\n  status: TransitionStatus;\n}\n\ninterface NextCallback {\n  cancel?: () => void;\n\n  (): void;\n}\n\nclass Transition extends React.Component<TransitionComponentProps, State> {\n  appearStatus: TransitionStatus | null;\n\n  nextCallback: NextCallback | null;\n\n  constructor(props: TransitionComponentProps) {\n    super(props);\n\n    const { appear } = props;\n\n    let initialStatus: TransitionStatus;\n\n    this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else if (props.unmountOnExit || props.mountOnEnter) {\n      initialStatus = UNMOUNTED;\n    } else {\n      initialStatus = EXITED;\n    }\n\n    this.state = { status: initialStatus };\n\n    this.nextCallback = null;\n  }\n\n  get node() {\n    const node = this.props.nodeRef?.current;\n    if (!node) {\n      throw new Error('snackbar - Custom snackbar is not refForwarding');\n    }\n    return node;\n  }\n\n  static getDerivedStateFromProps({ in: nextIn }: TransitionComponentProps, prevState: State) {\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return { status: EXITED };\n    }\n    return null;\n  }\n\n  componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  }\n\n  componentDidUpdate(prevProps: TransitionComponentProps) {\n    let nextStatus: TransitionStatus | null = null;\n    if (prevProps !== this.props) {\n      const { status } = this.state;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else if (status === ENTERING || status === ENTERED) {\n        nextStatus = EXITING;\n      }\n    }\n    this.updateStatus(false, nextStatus);\n  }\n\n  componentWillUnmount() {\n    this.cancelNextCallback();\n  }\n\n  getTimeouts(): { exit: number; enter: number } {\n    const { timeout } = this.props;\n    let enter = timeout;\n    let exit = timeout;\n\n    if (timeout != null && typeof timeout !== 'number' && typeof timeout !== 'string') {\n      exit = timeout.exit;\n      enter = timeout.enter;\n    }\n    return {\n      exit: exit as number,\n      enter: enter as number\n    };\n  }\n\n  updateStatus(mounting = false, nextStatus: TransitionStatus | null) {\n    if (nextStatus !== null) {\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({ status: UNMOUNTED });\n    }\n  }\n\n  performEnter(mounting: boolean) {\n    const { enter } = this.props;\n    const isAppearing = mounting;\n\n    const timeouts = this.getTimeouts();\n\n    if (!mounting && !enter) {\n      this.safeSetState({ status: ENTERED }, () => {\n        if (this.props.onEntered) {\n          this.props.onEntered(this.node, isAppearing);\n        }\n      });\n      return;\n    }\n\n    if (this.props.onEnter) {\n      this.props.onEnter(this.node, isAppearing);\n    }\n\n    this.safeSetState({ status: ENTERING }, () => {\n      if (this.props.onEntering) {\n        this.props.onEntering(this.node, isAppearing);\n      }\n\n      this.onTransitionEnd(timeouts.enter, () => {\n        this.safeSetState({ status: ENTERED }, () => {\n          if (this.props.onEntered) {\n            this.props.onEntered(this.node, isAppearing);\n          }\n        });\n      });\n    });\n  }\n\n  performExit() {\n    const { exit } = this.props;\n    const timeouts = this.getTimeouts();\n\n    // no exit animation skip right to EXITED\n    if (!exit) {\n      this.safeSetState({ status: EXITED }, () => {\n        if (this.props.onExited) {\n          this.props.onExited(this.node);\n        }\n      });\n      return;\n    }\n\n    if (this.props.onExit) {\n      this.props.onExit(this.node);\n    }\n\n    this.safeSetState({ status: EXITING }, () => {\n      if (this.props.onExiting) {\n        this.props.onExiting(this.node);\n      }\n\n      this.onTransitionEnd(timeouts.exit, () => {\n        this.safeSetState({ status: EXITED }, () => {\n          if (this.props.onExited) {\n            this.props.onExited(this.node);\n          }\n        });\n      });\n    });\n  }\n\n  cancelNextCallback() {\n    if (this.nextCallback !== null && this.nextCallback.cancel) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  }\n\n  safeSetState(nextState: State, callback: () => void) {\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  }\n\n  setNextCallback(callback: () => void) {\n    let active = true;\n\n    this.nextCallback = () => {\n      if (active) {\n        active = false;\n        this.nextCallback = null;\n\n        callback();\n      }\n    };\n\n    (this.nextCallback as NextCallback).cancel = () => {\n      active = false;\n    };\n\n    return this.nextCallback;\n  }\n\n  onTransitionEnd(timeout: number, handler: () => void) {\n    this.setNextCallback(handler);\n    const doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n    if (!this.node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback as NextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      this.props.addEndListener(this.node, this.nextCallback as NextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback as NextCallback, timeout);\n    }\n  }\n\n  render() {\n    const { status } = this.state;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    const {\n      children,\n      // filter props for `Transition`\n      in: _in,\n      mountOnEnter: _mountOnEnter,\n      unmountOnExit: _unmountOnExit,\n      appear: _appear,\n      enter: _enter,\n      exit: _exit,\n      timeout: _timeout,\n      addEndListener: _addEndListener,\n      onEnter: _onEnter,\n      onEntering: _onEntering,\n      onEntered: _onEntered,\n      onExit: _onExit,\n      onExiting: _onExiting,\n      onExited: _onExited,\n      nodeRef: _nodeRef,\n      ...childProps\n    } = this.props;\n\n    return children(status, childProps);\n  }\n}\n\nfunction noop() {\n  //\n}\n\n(Transition as any).defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\n\nexport default Transition;\n","/**\n * Credit to MUI team @ https://mui.com\n */\nimport * as React from 'react';\n\n/**\n * passes {value} to {ref}\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nfunction setRef<T>(ref: React.MutableRefObject<T | null> | ((instance: T | null) => void) | null | undefined, value: T | null): void {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport default function useForkRef<Instance>(\n  refA: React.Ref<Instance> | null | undefined,\n  refB: React.Ref<Instance> | null | undefined\n): React.Ref<Instance> | null {\n  /**\n   * This will create a new function if the ref props change and are defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refA == null && refB == null) {\n      return null;\n    }\n    return (refValue) => {\n      setRef(refA, refValue);\n      setRef(refB, refValue);\n    };\n  }, [refA, refB]);\n}\n","import { TransitionDuration } from '../types';\n\ninterface ComponentProps {\n  style?: React.CSSProperties | undefined;\n  /**\n   * number: 400\n   * TransitionDuration: { enter: 200, exit: 400 }\n   */\n  timeout: number | TransitionDuration;\n  mode: 'enter' | 'exit';\n}\n\ninterface TransitionPropsReturnType {\n  duration: number;\n  easing: string | undefined;\n  delay: string | undefined;\n}\n\nexport default function getTransitionProps(props: ComponentProps): TransitionPropsReturnType {\n  const { timeout, style = {}, mode } = props;\n  return {\n    duration: typeof timeout === 'object' ? timeout[mode] || 0 : timeout,\n    easing: style.transitionTimingFunction,\n    delay: style.transitionDelay\n  };\n}\n","/**\n * Credit to MUI team @ https://mui.com\n */\nexport const defaultEasing = {\n  // This is the most common easing curve.\n  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\n  // Objects enter the screen at full velocity from off-screen and\n  // slowly decelerate to a resting point.\n  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\n  // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\n  // The sharp curve is used by objects that may return to the screen at any time.\n  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\n};\n\n/**\n * CSS hack to force a repaint\n */\nexport const reflow = (node: Element): void => {\n  // We have to do something with node.scrollTop.\n  // Otherwise it's removed from the compiled code by optimisers\n  // eslint-disable-next-line no-self-assign\n  node.scrollTop = node.scrollTop;\n};\n","import { defaultEasing } from './utils';\n\ninterface CreateTransitionOptions {\n  duration: string | number;\n  easing?: string;\n  delay?: string | number;\n}\n\nconst formatMs = (milliseconds: number) => `${Math.round(milliseconds)}ms`;\n\nexport default function createTransition(props: string | string[] = ['all'], options?: CreateTransitionOptions): string {\n  const { duration = 300, easing = defaultEasing.easeInOut, delay = 0 } = options || {};\n\n  const properties = Array.isArray(props) ? props : [props];\n\n  return properties\n    .map((animatedProp) => {\n      const formattedDuration = typeof duration === 'string' ? duration : formatMs(duration);\n      const formattedDelay = typeof delay === 'string' ? delay : formatMs(delay);\n      return `${animatedProp} ${formattedDuration} ${easing} ${formattedDelay}`;\n    })\n    .join(',');\n}\n","/**\n * Credit to MUI team @ https://mui.com\n */\nimport * as React from 'react';\nimport TransitionComponent from '../Transition';\nimport useForkRef from '../useForkRef';\nimport getTransitionProps from '../getTransitionProps';\nimport createTransition from '../createTransition';\nimport { defaultEasing, reflow } from '../utils';\nimport { SlideTransitionDirection, TransitionProps } from '../../types';\n\nfunction ownerDocument(node: Node | null | undefined): Document {\n  return (node && node.ownerDocument) || document;\n}\n\nfunction ownerWindow(node: Node | null): Window {\n  const doc = ownerDocument(node);\n  return doc.defaultView || window;\n}\n\n/**\n * Corresponds to 10 frames at 60 Hz.\n * A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\n */\nfunction debounce(func: () => void, wait = 166) {\n  let timeout: ReturnType<typeof setTimeout>;\n  function debounced(...args: any[]) {\n    const later = () => {\n      // @ts-ignore\n      func.apply(this, args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  }\n\n  debounced.clear = () => {\n    clearTimeout(timeout);\n  };\n\n  return debounced;\n}\n\n/**\n * Translate the node so it can't be seen on the screen.\n * Later, we're going to translate the node back to its original location with `none`.\n */\nfunction getTranslateValue(direction: SlideTransitionDirection, node: HTMLElement & { fakeTransform?: string }): string {\n  const rect = node.getBoundingClientRect();\n  const containerWindow = ownerWindow(node);\n  let transform;\n\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    const computedStyle = containerWindow.getComputedStyle(node);\n    transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n  }\n\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (transform && transform !== 'none' && typeof transform === 'string') {\n    const transformValues = transform.split('(')[1].split(')')[0].split(',');\n    offsetX = parseInt(transformValues[4], 10);\n    offsetY = parseInt(transformValues[5], 10);\n  }\n\n  switch (direction) {\n    case 'left':\n      return `translateX(${containerWindow.innerWidth + offsetX - rect.left}px)`;\n    case 'right':\n      return `translateX(-${rect.left + rect.width - offsetX}px)`;\n    case 'up':\n      return `translateY(${containerWindow.innerHeight + offsetY - rect.top}px)`;\n    default:\n      // down\n      return `translateY(-${rect.top + rect.height - offsetY}px)`;\n  }\n}\n\nfunction setTranslateValue(direction: SlideTransitionDirection, node: HTMLElement | null): void {\n  if (!node) return;\n  const transform = getTranslateValue(direction, node);\n  if (transform) {\n    node.style.webkitTransform = transform;\n    node.style.transform = transform;\n  }\n}\n\nconst Slide = React.forwardRef<unknown, TransitionProps>((props, ref) => {\n  const { children, direction = 'down', in: inProp, style, timeout = 0, onEnter, onEntered, onExit, onExited, ...other } = props;\n\n  const nodeRef = React.useRef(null);\n  const handleRefIntermediary = useForkRef((children as any).ref, nodeRef);\n  const handleRef = useForkRef(handleRefIntermediary, ref);\n\n  const handleEnter: TransitionProps['onEnter'] = (node, isAppearing) => {\n    setTranslateValue(direction, node);\n    reflow(node);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  const handleEntering = (node: HTMLElement) => {\n    const easing = style?.transitionTimingFunction || defaultEasing.easeOut;\n    const transitionProps = getTransitionProps({\n      timeout,\n      mode: 'enter',\n      style: { ...style, transitionTimingFunction: easing }\n    });\n\n    node.style.webkitTransition = createTransition('-webkit-transform', transitionProps);\n    node.style.transition = createTransition('transform', transitionProps);\n\n    node.style.webkitTransform = 'none';\n    node.style.transform = 'none';\n  };\n\n  const handleExit: TransitionProps['onExit'] = (node) => {\n    const easing = style?.transitionTimingFunction || defaultEasing.sharp;\n    const transitionProps = getTransitionProps({\n      timeout,\n      mode: 'exit',\n      style: { ...style, transitionTimingFunction: easing }\n    });\n\n    node.style.webkitTransition = createTransition('-webkit-transform', transitionProps);\n    node.style.transition = createTransition('transform', transitionProps);\n\n    setTranslateValue(direction, node);\n\n    if (onExit) {\n      onExit(node);\n    }\n  };\n\n  const handleExited: TransitionProps['onExited'] = (node) => {\n    // No need for transitions when the component is hidden\n    node.style.webkitTransition = '';\n    node.style.transition = '';\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  const updatePosition = React.useCallback(() => {\n    if (nodeRef.current) {\n      setTranslateValue(direction, nodeRef.current);\n    }\n  }, [direction]);\n\n  React.useEffect(() => {\n    // Skip configuration where the position is screen size invariant.\n    if (inProp || direction === 'down' || direction === 'right') {\n      return undefined;\n    }\n\n    const handleResize = debounce(() => {\n      if (nodeRef.current) {\n        setTranslateValue(direction, nodeRef.current);\n      }\n    });\n\n    const containerWindow = ownerWindow(nodeRef.current);\n    containerWindow.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n    };\n  }, [direction, inProp]);\n\n  React.useEffect(() => {\n    if (!inProp) {\n      // We need to update the position of the drawer when the direction change and\n      // when it's hidden.\n      updatePosition();\n    }\n  }, [inProp, updatePosition]);\n\n  return (\n    <TransitionComponent\n      appear\n      nodeRef={nodeRef}\n      onEnter={handleEnter}\n      onEntered={onEntered}\n      onEntering={handleEntering}\n      onExit={handleExit}\n      onExited={handleExited}\n      in={inProp}\n      timeout={timeout}\n      {...other}\n    >\n      {(state, childProps) =>\n        React.cloneElement(children as any, {\n          ref: handleRef,\n          style: {\n            visibility: state === 'exited' && !inProp ? 'hidden' : undefined,\n            ...style,\n            ...(children as any).props.style\n          },\n          ...childProps\n        })\n      }\n    </TransitionComponent>\n  );\n});\n\nSlide.displayName = 'Slide';\n\nexport default Slide;\n","import React from 'react';\n\nconst SvgIcon = (props: { children: JSX.Element }) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    focusable=\"false\"\n    style={{\n      fontSize: 20,\n      marginInlineEnd: 8,\n      userSelect: 'none',\n      width: '1em',\n      height: '1em',\n      display: 'inline-block',\n      fill: 'currentColor',\n      flexShrink: 0\n    }}\n    {...props}\n  />\n);\n\nconst CheckIcon: React.FC = () => (\n  <SvgIcon>\n    <path\n      d=\"M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41\n        10.59L10 14.17L17.59 6.58L19 8L10 17Z\"\n    />\n  </SvgIcon>\n);\n\nconst WarningIcon: React.FC = () => (\n  <SvgIcon>\n    <path d=\"M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z\" />\n  </SvgIcon>\n);\n\nconst ErrorIcon: React.FC = () => (\n  <SvgIcon>\n    <path\n      d=\"M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,\n        6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,\n        13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z\"\n    />\n  </SvgIcon>\n);\n\nconst InfoIcon: React.FC = () => (\n  <SvgIcon>\n    <path\n      d=\"M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,\n        0 22,12A10,10 0 0,0 12,2Z\"\n    />\n  </SvgIcon>\n);\n\nconst defaultIconVariants: Record<string, React.ReactNode> = {\n  default: undefined,\n  success: <CheckIcon />,\n  warning: <WarningIcon />,\n  error: <ErrorIcon />,\n  info: <InfoIcon />\n};\n\nexport default defaultIconVariants;\n","import Slide from '../transitions/Slide';\nimport defaultIconVariants from '../utils/defaultIconVariants';\nimport { InternalSnack } from '../types';\n\nexport const defaults = {\n  maxSnack: 3,\n  persist: false,\n  hideIconVariant: false,\n  disableWindowBlurListener: false,\n  variant: 'default',\n  autoHideDuration: 5000,\n  iconVariant: defaultIconVariants,\n  anchorOrigin: { vertical: 'bottom', horizontal: 'left' },\n  TransitionComponent: Slide,\n  transitionDuration: {\n    enter: 225,\n    exit: 195\n  }\n};\n\n/**\n * Derives the right autoHideDuration taking into account the following\n * prority order: 1: Options, 2: Props, 3: default fallback\n */\nconst getAutoHideDuration = (optionsDuration: any, propsDuration: any) => {\n  const isNumberOrNull = (numberish: number | null) => typeof numberish === 'number' || numberish === null;\n\n  if (isNumberOrNull(optionsDuration)) return optionsDuration;\n  if (isNumberOrNull(propsDuration)) return propsDuration;\n  return defaults.autoHideDuration;\n};\n\n/**\n * Derives the right transitionDuration taking into account the following\n * prority order: 1: Options, 2: Props, 3: default fallback\n */\nconst getTransitionDuration = (optionsDuration: any, propsDuration: any) => {\n  const is = (item: any, types: string[]) => types.some((t) => typeof item === t);\n\n  if (is(optionsDuration, ['string', 'number'])) {\n    return optionsDuration;\n  }\n\n  if (is(optionsDuration, ['object'])) {\n    return {\n      ...defaults.transitionDuration,\n      ...(is(propsDuration, ['object']) && propsDuration),\n      ...optionsDuration\n    };\n  }\n\n  if (is(propsDuration, ['string', 'number'])) {\n    return propsDuration;\n  }\n\n  if (is(propsDuration, ['object'])) {\n    return {\n      ...defaults.transitionDuration,\n      ...propsDuration\n    };\n  }\n\n  return defaults.transitionDuration;\n};\n\nexport const merge =\n  (options: any, props: any) =>\n  (name: keyof InternalSnack, shouldObjectMerge = false): any => {\n    if (shouldObjectMerge) {\n      return {\n        ...(defaults as any)[name],\n        ...props[name],\n        ...options[name]\n      };\n    }\n\n    if (name === 'autoHideDuration') {\n      return getAutoHideDuration(options.autoHideDuration, props.autoHideDuration);\n    }\n\n    if (name === 'transitionDuration') {\n      return getTransitionDuration(options.transitionDuration, props.transitionDuration);\n    }\n\n    return options[name] || props[name] || (defaults as any)[name];\n  };\n","import { css, CSSAttribute } from 'goober';\n\nexport function makeStyles<\n  S extends {\n    [key: string]: CSSAttribute;\n  },\n  K extends keyof S\n>(styles: S): { [key in K]: string } {\n  return Object.entries(styles).reduce(\n    (acc, [key, value]) => ({\n      ...acc,\n      [key]: css(value)\n    }),\n    {} as { [key in K]: string }\n  );\n}\n\nexport const ComponentClasses = {\n  SnackbarContainer: 'snackbar-SnackbarContainer',\n  Snackbar: 'snackbar-Snackbar',\n  CollapseWrapper: 'snackbar-CollapseWrapper',\n  MuiContent: 'snackbar-MuiContent',\n  MuiContentVariant: (variant: string) => `snackbar-MuiContent-${variant}`\n};\n","/**\n * Credit to MUI team @ https://mui.com\n */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { reflow } from '../utils';\nimport TransitionComponent from '../Transition';\nimport useForkRef from '../useForkRef';\nimport { TransitionProps } from '../../types';\nimport getTransitionProps from '../getTransitionProps';\nimport createTransition from '../createTransition';\nimport { ComponentClasses, makeStyles } from '../../utils/styles';\n\nconst classes = makeStyles({\n  root: {\n    height: 0\n  },\n  entered: {\n    height: 'auto'\n  }\n});\n\nconst collapsedSize = '0px';\nconst timeout = 175;\n\ninterface CollapseProps {\n  children: JSX.Element;\n  in: boolean;\n  onExited: TransitionProps['onExited'];\n}\n\nconst Collapse = React.forwardRef<HTMLDivElement, CollapseProps>((props, ref) => {\n  const { children, in: inProp, onExited } = props;\n\n  const wrapperRef = React.useRef<HTMLDivElement>(null);\n\n  const nodeRef = React.useRef<HTMLDivElement>(null);\n  const handleRef = useForkRef(ref, nodeRef);\n\n  const getWrapperSize = () => (wrapperRef.current ? wrapperRef.current.clientHeight : 0);\n\n  const handleEnter: TransitionProps['onEnter'] = (node) => {\n    node.style.height = collapsedSize;\n  };\n\n  const handleEntering = (node: HTMLElement) => {\n    const wrapperSize = getWrapperSize();\n\n    const { duration: transitionDuration, easing } = getTransitionProps({\n      timeout,\n      mode: 'enter'\n    });\n\n    node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n\n    node.style.height = `${wrapperSize}px`;\n    node.style.transitionTimingFunction = easing || '';\n  };\n\n  const handleEntered: TransitionProps['onEntered'] = (node) => {\n    node.style.height = 'auto';\n  };\n\n  const handleExit: TransitionProps['onExit'] = (node) => {\n    node.style.height = `${getWrapperSize()}px`;\n  };\n\n  const handleExiting = (node: HTMLElement) => {\n    reflow(node);\n\n    const { duration: transitionDuration, easing } = getTransitionProps({\n      timeout,\n      mode: 'exit'\n    });\n\n    node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n    node.style.height = collapsedSize;\n    node.style.transitionTimingFunction = easing || '';\n  };\n\n  return (\n    <TransitionComponent\n      in={inProp}\n      unmountOnExit\n      onEnter={handleEnter}\n      onEntered={handleEntered}\n      onEntering={handleEntering}\n      onExit={handleExit}\n      onExited={onExited}\n      onExiting={handleExiting}\n      nodeRef={nodeRef}\n      timeout={timeout}\n    >\n      {(state, childProps) => (\n        <div\n          ref={handleRef}\n          className={clsx(classes.root, { [classes.entered]: state === 'entered' })}\n          style={{\n            pointerEvents: 'all',\n            overflow: 'hidden',\n            minHeight: collapsedSize,\n            transition: createTransition('height'),\n            ...(state === 'entered' && {\n              overflow: 'visible'\n            }),\n            ...(state === 'exited' &&\n              !inProp && {\n                visibility: 'hidden'\n              })\n          }}\n          {...childProps}\n        >\n          <div\n            ref={wrapperRef}\n            className={ComponentClasses.CollapseWrapper}\n            // Hack to get children with a negative margin to not falsify the height computation.\n            style={{ display: 'flex', width: '100%' }}\n          >\n            {children}\n          </div>\n        </div>\n      )}\n    </TransitionComponent>\n  );\n});\n\nCollapse.displayName = 'Collapse';\n\nexport default Collapse;\n","import {\n  InternalSnack,\n  SlideTransitionDirection,\n  SnackbarOrigin,\n  SnackbarClassKey,\n  SnackbarProviderProps,\n  ClassNameMap,\n  ContainerClassKey\n} from '../types';\nimport { originKeyExtractor } from '../utils';\n\nconst direction: Record<string, SlideTransitionDirection> = {\n  right: 'left',\n  left: 'right',\n  bottom: 'up',\n  top: 'down'\n};\n\nexport const getSlideDirection = (anchorOrigin: InternalSnack['anchorOrigin']): SlideTransitionDirection => {\n  if (anchorOrigin.horizontal !== 'center') {\n    return direction[anchorOrigin.horizontal];\n  }\n  return direction[anchorOrigin.vertical];\n};\n\n/** Tranforms classes name */\nexport const toSnackbarAnchorOrigin = (anchorOrigin: SnackbarOrigin): SnackbarClassKey =>\n  `anchorOrigin${originKeyExtractor(anchorOrigin)}` as SnackbarClassKey;\n\n/**\n * Omit SnackbarContainer class keys that are not needed for SnackbarItem\n */\nexport const keepSnackbarClassKeys = (classes: SnackbarProviderProps['classes'] = {}): Partial<ClassNameMap<SnackbarClassKey>> => {\n  const containerClasses: Record<ContainerClassKey, true> = {\n    containerRoot: true,\n    containerAnchorOriginTopCenter: true,\n    containerAnchorOriginBottomCenter: true,\n    containerAnchorOriginTopRight: true,\n    containerAnchorOriginBottomRight: true,\n    containerAnchorOriginTopLeft: true,\n    containerAnchorOriginBottomLeft: true\n  };\n  return (Object.keys(classes) as ContainerClassKey[])\n    .filter((key) => !containerClasses[key])\n    .reduce((obj, key) => ({ ...obj, [key]: classes[key] }), {});\n};\n","import { SnackbarKey } from 'src/types';\n\nconst noOp = () => {\n  /* */\n};\n\n/**\n * Credit to MUI team @ https://mui.com\n * Safe chained function.\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n */\nexport default function createChainedFunction<Args extends any[], This>(\n  funcs: Array<((this: This, ...args: Args) => any) | undefined>,\n  snackbarId?: SnackbarKey\n): (this: This, ...args: Args) => void {\n  // @ts-ignore\n  return funcs.reduce((acc, func) => {\n    if (func === null || func === undefined) {\n      return acc;\n    }\n\n    return function chainedFunction(...args) {\n      const argums = [...args] as any;\n      if (snackbarId && argums.indexOf(snackbarId) === -1) {\n        argums.push(snackbarId);\n      }\n      // @ts-ignore\n      acc.apply(this, argums);\n      func.apply(this, argums);\n    };\n  }, noOp);\n}\n","/**\n * Credit to MUI team @ https://mui.com\n * https://github.com/facebook/react/issues/14099#issuecomment-440013892\n */\nimport * as React from 'react';\n\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\nexport default function useEventCallback<Args extends unknown[], Return>(fn: (...args: Args) => Return): (...args: Args) => Return {\n  const ref = React.useRef(fn);\n  useEnhancedEffect(() => {\n    ref.current = fn;\n  });\n  return React.useCallback(\n    (...args: Args) =>\n      // @ts-expect-error hide `this`\n      (0, ref.current)(...args),\n    []\n  );\n}\n","/**\n * Credit to MUI team @ https://mui.com\n */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport useEventCallback from '../utils/useEventCallback';\nimport { CloseReason, SharedProps, SnackbarKey } from '../types';\nimport { ComponentClasses } from '../utils/styles';\n\ninterface SnackbarProps extends Required<Pick<SharedProps, 'disableWindowBlurListener' | 'onClose'>> {\n  open: boolean;\n  id: SnackbarKey;\n  className: string;\n  children: JSX.Element;\n  autoHideDuration: number | null | undefined;\n  SnackbarProps: SharedProps['SnackbarProps'];\n}\n\nconst Snackbar = React.forwardRef<HTMLDivElement, SnackbarProps>((props, ref) => {\n  const { children, className, autoHideDuration, disableWindowBlurListener = false, onClose, id, open, SnackbarProps = {} } = props;\n\n  const timerAutoHide = React.useRef<ReturnType<typeof setTimeout>>();\n\n  const handleClose = useEventCallback((...args: [null, CloseReason, SnackbarKey]) => {\n    if (onClose) {\n      onClose(...args);\n    }\n  });\n\n  const setAutoHideTimer = useEventCallback((autoHideDurationParam?: number | null) => {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    if (timerAutoHide.current) {\n      clearTimeout(timerAutoHide.current);\n    }\n    timerAutoHide.current = setTimeout(() => {\n      handleClose(null, 'timeout', id);\n    }, autoHideDurationParam);\n  });\n\n  React.useEffect(() => {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return () => {\n      if (timerAutoHide.current) {\n        clearTimeout(timerAutoHide.current);\n      }\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]);\n\n  /**\n   * Pause the timer when the user is interacting with the Snackbar\n   * or when the user hide the window.\n   */\n  const handlePause = () => {\n    if (timerAutoHide.current) {\n      clearTimeout(timerAutoHide.current);\n    }\n  };\n\n  /**\n   * Restart the timer when the user is no longer interacting with the Snackbar\n   * or when the window is shown back.\n   */\n  const handleResume = React.useCallback(() => {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, setAutoHideTimer]);\n\n  const handleMouseEnter: React.MouseEventHandler<HTMLDivElement> = (event) => {\n    if (SnackbarProps.onMouseEnter) {\n      SnackbarProps.onMouseEnter(event);\n    }\n    handlePause();\n  };\n\n  const handleMouseLeave: React.MouseEventHandler<HTMLDivElement> = (event) => {\n    if (SnackbarProps.onMouseLeave) {\n      SnackbarProps.onMouseLeave(event);\n    }\n    handleResume();\n  };\n\n  React.useEffect(() => {\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n\n      return () => {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]);\n\n  return (\n    <div\n      ref={ref}\n      {...SnackbarProps}\n      className={clsx(ComponentClasses.Snackbar, className)}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      {children}\n    </div>\n  );\n});\n\nSnackbar.displayName = 'Snackbar';\n\nexport default Snackbar;\n","import React, { forwardRef } from 'react';\nimport clsx from 'clsx';\nimport { SnackbarContentProps } from '../types';\nimport { breakpoints } from '../utils';\nimport { makeStyles } from '../utils/styles';\n\nconst classes = makeStyles({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flexGrow: 1,\n    [breakpoints.upSm]: {\n      flexGrow: 'initial',\n      minWidth: '288px'\n    }\n  }\n});\n\nconst SnackbarContent = forwardRef<HTMLDivElement, SnackbarContentProps>(({ className, ...props }, ref) => (\n  <div ref={ref} className={clsx(classes.root, className)} {...props} />\n));\n\nSnackbarContent.displayName = 'SnackbarContent';\n\nexport default SnackbarContent;\n","import React, { forwardRef, memo } from 'react';\nimport clsx from 'clsx';\nimport SnackbarContent from '../../SnackbarContent';\nimport { CustomContentProps } from '../../types';\nimport { ComponentClasses, makeStyles } from '../../utils/styles';\n\nconst classes = makeStyles({\n  root: {\n    backgroundColor: '#313131', // dark grey\n    fontSize: '0.875rem',\n    lineHeight: 1.43,\n    letterSpacing: '0.01071em',\n    color: '#fff',\n    alignItems: 'center',\n    padding: '6px 16px',\n    borderRadius: '4px',\n    boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)'\n  },\n  lessPadding: {\n    paddingLeft: `${8 * 2.5}px`\n  },\n  default: {\n    backgroundColor: '#313131' // dark grey\n  },\n  success: {\n    backgroundColor: '#43a047' // green\n  },\n  error: {\n    backgroundColor: '#d32f2f' // dark red\n  },\n  warning: {\n    backgroundColor: '#ff9800' // amber\n  },\n  info: {\n    backgroundColor: '#2196f3' // nice blue\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '8px 0'\n  },\n  action: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 'auto',\n    paddingLeft: '16px',\n    marginRight: '-8px'\n  }\n});\n\nconst ariaDescribedby = 'snackbar-snackbar';\n\nconst MaterialDesignContent = forwardRef<HTMLDivElement, CustomContentProps>((props, forwardedRef) => {\n  const { id, message, action: componentOrFunctionAction, iconVariant, variant, hideIconVariant, style, className } = props;\n\n  const icon = iconVariant[variant];\n\n  let action = componentOrFunctionAction;\n  if (typeof action === 'function') {\n    action = action(id);\n  }\n\n  return (\n    <SnackbarContent\n      ref={forwardedRef}\n      role=\"alert\"\n      aria-describedby={ariaDescribedby}\n      style={style}\n      className={clsx(\n        ComponentClasses.MuiContent,\n        ComponentClasses.MuiContentVariant(variant),\n        classes.root,\n        { [classes.lessPadding]: !hideIconVariant && icon },\n        classes[variant],\n        className\n      )}\n    >\n      <div id={ariaDescribedby} className={classes.message}>\n        {!hideIconVariant ? icon : null}\n        {message}\n      </div>\n      {action && <div className={classes.action}>{action}</div>}\n    </SnackbarContent>\n  );\n});\n\nMaterialDesignContent.displayName = 'MaterialDesignContent';\n\nexport default memo(MaterialDesignContent);\n","import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport clsx from 'clsx';\nimport Collapse from '../transitions/Collapse';\nimport { getSlideDirection, toSnackbarAnchorOrigin, keepSnackbarClassKeys } from './utils';\nimport { TransitionHandlerProps, SnackbarProviderProps, CustomContentProps, InternalSnack, SharedProps } from '../types';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport Snackbar from './Snackbar';\nimport { makeStyles } from '../utils/styles';\nimport MaterialDesignContent from '../ui/MaterialDesignContent';\n\nconst styles = makeStyles({\n  wrappedRoot: {\n    width: '100%',\n    position: 'relative',\n    transform: 'translateX(0)',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    minWidth: '288px'\n  }\n});\n\ninterface SnackbarItemProps extends Required<Pick<SnackbarProviderProps, 'onEntered' | 'onExited' | 'onClose'>> {\n  snack: InternalSnack;\n  classes: SnackbarProviderProps['classes'];\n  onEnter: SnackbarProviderProps['onEnter'];\n  onExit: SnackbarProviderProps['onExit'];\n  Component?: React.ComponentType<CustomContentProps>;\n}\n\nconst SnackbarItem: React.FC<SnackbarItemProps> = (props) => {\n  const timeout = useRef<ReturnType<typeof setTimeout>>();\n  const [collapsed, setCollapsed] = useState(true);\n\n  const handleClose: NonNullable<SharedProps['onClose']> = createChainedFunction([props.snack.onClose, props.onClose]);\n\n  const handleEntered: TransitionHandlerProps['onEntered'] = () => {\n    if (props.snack.requestClose) {\n      handleClose(null, 'instructed', props.snack.id);\n    }\n  };\n\n  const handleExitedScreen = useCallback((): void => {\n    timeout.current = setTimeout(() => {\n      setCollapsed((col) => !col);\n    }, 125);\n  }, []);\n\n  useEffect(\n    () => (): void => {\n      if (timeout.current) {\n        clearTimeout(timeout.current);\n      }\n    },\n    []\n  );\n\n  const { snack, classes: allClasses, Component = MaterialDesignContent } = props;\n\n  const classes = useMemo(() => keepSnackbarClassKeys(allClasses), [allClasses]);\n\n  const {\n    open,\n    SnackbarProps,\n    TransitionComponent,\n    TransitionProps,\n    transitionDuration,\n    disableWindowBlurListener,\n    content: componentOrFunctionContent,\n    entered: ignoredEntered,\n    requestClose: ignoredRequestClose,\n    onEnter: ignoreOnEnter,\n    onEntered: ignoreOnEntered,\n    onExit: ignoreOnExit,\n    onExited: ignoreOnExited,\n    ...otherSnack\n  } = snack;\n\n  const transitionProps = {\n    direction: getSlideDirection(otherSnack.anchorOrigin),\n    timeout: transitionDuration,\n    ...TransitionProps\n  };\n\n  let content = componentOrFunctionContent;\n  if (typeof content === 'function') {\n    content = content(otherSnack.id, otherSnack.message);\n  }\n\n  const callbacks: { [key in keyof TransitionHandlerProps]?: any } = (\n    ['onEnter', 'onEntered', 'onExit', 'onExited'] as (keyof TransitionHandlerProps)[]\n  ).reduce(\n    (acc, cbName) => ({\n      ...acc,\n      [cbName]: createChainedFunction([props.snack[cbName] as any, props[cbName] as any], otherSnack.id)\n    }),\n    {}\n  );\n\n  return (\n    <Collapse in={collapsed} onExited={callbacks.onExited}>\n      <Snackbar\n        open={open}\n        id={otherSnack.id}\n        disableWindowBlurListener={disableWindowBlurListener}\n        autoHideDuration={otherSnack.autoHideDuration}\n        className={clsx(styles.wrappedRoot, classes.root, classes[toSnackbarAnchorOrigin(otherSnack.anchorOrigin)])}\n        SnackbarProps={SnackbarProps}\n        onClose={handleClose}\n      >\n        <TransitionComponent\n          {...transitionProps}\n          appear\n          in={open}\n          onExit={callbacks.onExit}\n          onExited={handleExitedScreen}\n          onEnter={callbacks.onEnter}\n          // order matters. first callbacks.onEntered to set entered: true,\n          // then handleEntered to check if there's a request for closing\n          onEntered={createChainedFunction([callbacks.onEntered, handleEntered], otherSnack.id)}\n        >\n          {(content as React.ReactElement) || <Component {...otherSnack} />}\n        </TransitionComponent>\n      </Snackbar>\n    </Collapse>\n  );\n};\n\nexport default SnackbarItem;\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport createTransition from '../transitions/createTransition';\nimport { makeStyles, ComponentClasses } from '../utils/styles';\nimport { breakpoints, originKeyExtractor } from '../utils';\nimport { ContainerClassKey, SnackbarProviderProps } from '../types';\n\nconst indents = {\n  view: { default: 20, dense: 4 },\n  snackbar: { default: 6, dense: 2 }\n};\n\nconst collapseWrapper = `.${ComponentClasses.CollapseWrapper}`;\n\nconst xsWidthMargin = 16;\n\nconst styles = makeStyles({\n  root: {\n    boxSizing: 'border-box',\n    display: 'flex',\n    maxHeight: '100%',\n    position: 'fixed',\n    zIndex: 1400,\n    height: 'auto',\n    width: 'auto',\n    transition: createTransition(['top', 'right', 'bottom', 'left', 'max-width'], {\n      duration: 300,\n      easing: 'ease'\n    }),\n    // container itself is invisible and should not block clicks, clicks should be passed to its children\n    // a pointerEvents: all is applied in the collapse component\n    pointerEvents: 'none',\n    [collapseWrapper]: {\n      padding: `${indents.snackbar.default}px 0px`,\n      transition: 'padding 300ms ease 0ms'\n    },\n    maxWidth: `calc(100% - ${indents.view.default * 2}px)`,\n    [breakpoints.downXs]: {\n      width: '100%',\n      maxWidth: `calc(100% - ${xsWidthMargin * 2}px)`\n    }\n  },\n  rootDense: {\n    [collapseWrapper]: {\n      padding: `${indents.snackbar.dense}px 0px`\n    }\n  },\n  top: {\n    top: `${indents.view.default - indents.snackbar.default}px`,\n    flexDirection: 'column'\n  },\n  bottom: {\n    bottom: `${indents.view.default - indents.snackbar.default}px`,\n    flexDirection: 'column-reverse'\n  },\n  left: {\n    left: `${indents.view.default}px`,\n    [breakpoints.upSm]: {\n      alignItems: 'flex-start'\n    },\n    [breakpoints.downXs]: {\n      left: `${xsWidthMargin}px`\n    }\n  },\n  right: {\n    right: `${indents.view.default}px`,\n    [breakpoints.upSm]: {\n      alignItems: 'flex-end'\n    },\n    [breakpoints.downXs]: {\n      right: `${xsWidthMargin}px`\n    }\n  },\n  center: {\n    left: '50%',\n    transform: 'translateX(-50%)',\n    [breakpoints.upSm]: {\n      alignItems: 'center'\n    }\n  }\n});\n\ninterface SnackbarContainerProps {\n  children: React.ReactNode;\n  dense: SnackbarProviderProps['dense'];\n  anchorOrigin: NonNullable<SnackbarProviderProps['anchorOrigin']>;\n  classes: SnackbarProviderProps['classes'];\n}\n\nconst SnackbarContainer: React.FC<SnackbarContainerProps> = (props) => {\n  const { classes = {}, anchorOrigin, dense, children } = props;\n\n  const combinedClassname = clsx(\n    ComponentClasses.SnackbarContainer,\n    styles[anchorOrigin.vertical],\n    styles[anchorOrigin.horizontal],\n    { [styles.rootDense]: dense },\n    styles.root, // root should come after others to override maxWidth\n    classes.containerRoot,\n    classes[`containerAnchorOrigin${originKeyExtractor(anchorOrigin)}` as ContainerClassKey]\n  );\n\n  return <div className={combinedClassname}>{children}</div>;\n};\n\nexport default memo(SnackbarContainer);\n","import React, { Component, isValidElement } from 'react';\nimport { createPortal } from 'react-dom';\nimport clsx from 'clsx';\nimport SnackbarContext from '../SnackbarContext';\nimport { originKeyExtractor, isDefined } from '../utils';\nimport { defaults, merge } from './merger';\nimport SnackbarItem from '../SnackbarItem';\nimport SnackbarContainer from '../SnackbarContainer';\nimport warning from '../utils/warning';\nimport {\n  SnackbarProviderProps,\n  SnackbarKey,\n  ProviderContext,\n  TransitionHandlerProps,\n  InternalSnack,\n  OptionsObject,\n  SharedProps,\n  SnackbarMessage\n} from '../types';\nimport createChainedFunction from '../utils/createChainedFunction';\n\nconst isOptions = (\n  messageOrOptions: SnackbarMessage | (OptionsObject & { message?: SnackbarMessage })\n): messageOrOptions is OptionsObject & { message?: SnackbarMessage } => {\n  const isMessage = typeof messageOrOptions === 'string' || isValidElement(messageOrOptions);\n  return !isMessage;\n};\n\ntype Reducer = (state: State) => State;\ntype SnacksByPosition = { [key: string]: InternalSnack[] };\n\ninterface State {\n  snacks: InternalSnack[];\n  queue: InternalSnack[];\n  contextValue: ProviderContext;\n}\n\nexport let enqueueSnackbar: ProviderContext['enqueueSnackbar'];\nexport let closeSnackbar: ProviderContext['closeSnackbar'];\n\nclass SnackbarProvider extends Component<SnackbarProviderProps, State> {\n  constructor(props: SnackbarProviderProps) {\n    super(props);\n    enqueueSnackbar = this.enqueueSnackbar;\n    closeSnackbar = this.closeSnackbar;\n\n    this.state = {\n      snacks: [],\n      queue: [],\n      contextValue: {\n        enqueueSnackbar: this.enqueueSnackbar.bind(this),\n        closeSnackbar: this.closeSnackbar.bind(this)\n      }\n    };\n  }\n\n  get maxSnack(): number {\n    return this.props.maxSnack || defaults.maxSnack;\n  }\n\n  /**\n   * Adds a new snackbar to the queue to be presented.\n   * Returns generated or user defined key referencing the new snackbar or null\n   */\n  enqueueSnackbar = (\n    messageOrOptions: SnackbarMessage | (OptionsObject & { message?: SnackbarMessage }),\n    optsOrUndefined: OptionsObject = {}\n  ): SnackbarKey => {\n    if (messageOrOptions === undefined || messageOrOptions === null) {\n      throw new Error('enqueueSnackbar called with invalid argument');\n    }\n\n    const opts = isOptions(messageOrOptions) ? messageOrOptions : optsOrUndefined;\n\n    const message: SnackbarMessage | undefined = isOptions(messageOrOptions) ? messageOrOptions.message : messageOrOptions;\n\n    const { key, preventDuplicate, ...options } = opts;\n\n    const hasSpecifiedKey = isDefined(key);\n    const id = hasSpecifiedKey ? (key as SnackbarKey) : new Date().getTime() + Math.random();\n\n    const merger = merge(options, this.props);\n    const snack: InternalSnack = {\n      id,\n      ...options,\n      message,\n      open: true,\n      entered: false,\n      requestClose: false,\n      persist: merger('persist'),\n      action: merger('action'),\n      content: merger('content'),\n      variant: merger('variant'),\n      anchorOrigin: merger('anchorOrigin'),\n      disableWindowBlurListener: merger('disableWindowBlurListener'),\n      autoHideDuration: merger('autoHideDuration'),\n      hideIconVariant: merger('hideIconVariant'),\n      TransitionComponent: merger('TransitionComponent'),\n      transitionDuration: merger('transitionDuration'),\n      TransitionProps: merger('TransitionProps', true),\n      iconVariant: merger('iconVariant', true),\n      style: merger('style', true),\n      SnackbarProps: merger('SnackbarProps', true),\n      className: clsx(this.props.className, options.className)\n    };\n\n    if (snack.persist) {\n      snack.autoHideDuration = undefined;\n    }\n\n    this.setState((state) => {\n      if ((preventDuplicate === undefined && this.props.preventDuplicate) || preventDuplicate) {\n        const compareFunction = (item: InternalSnack): boolean => (hasSpecifiedKey ? item.id === id : item.message === message);\n\n        const inQueue = state.queue.findIndex(compareFunction) > -1;\n        const inView = state.snacks.findIndex(compareFunction) > -1;\n        if (inQueue || inView) {\n          return state;\n        }\n      }\n\n      return this.handleDisplaySnack({\n        ...state,\n        queue: [...state.queue, snack]\n      });\n    });\n\n    return id;\n  };\n\n  /**\n   * Reducer: Display snack if there's space for it. Otherwise, immediately\n   * begin dismissing the oldest message to start showing the new one.\n   */\n  handleDisplaySnack: Reducer = (state) => {\n    const { snacks } = state;\n    if (snacks.length >= this.maxSnack) {\n      return this.handleDismissOldest(state);\n    }\n    return this.processQueue(state);\n  };\n\n  /**\n   * Reducer: Display items (notifications) in the queue if there's space for them.\n   */\n  processQueue: Reducer = (state) => {\n    const { queue, snacks } = state;\n    if (queue.length > 0) {\n      return {\n        ...state,\n        snacks: [...snacks, queue[0]],\n        queue: queue.slice(1, queue.length)\n      };\n    }\n    return state;\n  };\n\n  /**\n   * Reducer: Hide oldest snackbar on the screen because there exists a new one which we have to display.\n   * (ignoring the one with 'persist' flag. i.e. explicitly told by user not to get dismissed).\n   *\n   * Note 1: If there is already a message leaving the screen, no new messages are dismissed.\n   * Note 2: If the oldest message has not yet entered the screen, only a request to close the\n   *         snackbar is made. Once it entered the screen, it will be immediately dismissed.\n   */\n  handleDismissOldest: Reducer = (state) => {\n    if (state.snacks.some((item) => !item.open || item.requestClose)) {\n      return state;\n    }\n\n    let popped = false;\n    let ignore = false;\n\n    const persistentCount = state.snacks.reduce((acc, current) => acc + (current.open && current.persist ? 1 : 0), 0);\n\n    if (persistentCount === this.maxSnack) {\n      warning('NO_PERSIST_ALL');\n      ignore = true;\n    }\n\n    const snacks = state.snacks.map((item) => {\n      if (!popped && (!item.persist || ignore)) {\n        popped = true;\n\n        if (!item.entered) {\n          return {\n            ...item,\n            requestClose: true\n          };\n        }\n\n        if (item.onClose) {\n          item.onClose(null, 'maxsnack', item.id);\n        }\n\n        if (this.props.onClose) {\n          this.props.onClose(null, 'maxsnack', item.id);\n        }\n\n        return {\n          ...item,\n          open: false\n        };\n      }\n\n      return { ...item };\n    });\n\n    return { ...state, snacks };\n  };\n\n  /**\n   * Set the entered state of the snackbar with the given key.\n   */\n  handleEnteredSnack: TransitionHandlerProps['onEntered'] = (node, isAppearing, key) => {\n    if (!isDefined(key)) {\n      throw new Error('handleEnteredSnack Cannot be called with undefined key');\n    }\n\n    this.setState(({ snacks }) => ({\n      snacks: snacks.map((item) => (item.id === key ? { ...item, entered: true } : { ...item }))\n    }));\n  };\n\n  /**\n   * Hide a snackbar after its timeout.\n   */\n  handleCloseSnack: NonNullable<SharedProps['onClose']> = (event, reason, key) => {\n    // should not use createChainedFunction for onClose.\n    // because this.closeSnackbar called this function\n    if (this.props.onClose) {\n      this.props.onClose(event, reason, key);\n    }\n\n    const shouldCloseAll = key === undefined;\n\n    this.setState(({ snacks, queue }) => ({\n      snacks: snacks.map((item) => {\n        if (!shouldCloseAll && item.id !== key) {\n          return { ...item };\n        }\n\n        return item.entered ? { ...item, open: false } : { ...item, requestClose: true };\n      }),\n      queue: queue.filter((item) => item.id !== key)\n    }));\n  };\n\n  /**\n   * Close snackbar with the given key\n   */\n  closeSnackbar: ProviderContext['closeSnackbar'] = (key) => {\n    // call individual snackbar onClose callback passed through options parameter\n    const toBeClosed = this.state.snacks.find((item) => item.id === key);\n    if (isDefined(key) && toBeClosed && toBeClosed.onClose) {\n      toBeClosed.onClose(null, 'instructed', key);\n    }\n\n    this.handleCloseSnack(null, 'instructed', key);\n  };\n\n  /**\n   * When we set open attribute of a snackbar to false (i.e. after we hide a snackbar),\n   * it leaves the screen and immediately after leaving animation is done, this method\n   * gets called. We remove the hidden snackbar from state and then display notifications\n   * waiting in the queue (if any). If after this process the queue is not empty, the\n   * oldest message is dismissed.\n   */\n  handleExitedSnack: TransitionHandlerProps['onExited'] = (node, key) => {\n    if (!isDefined(key)) {\n      throw new Error('handleExitedSnack Cannot be called with undefined key');\n    }\n\n    this.setState((state) => {\n      const newState = this.processQueue({\n        ...state,\n        snacks: state.snacks.filter((item) => item.id !== key)\n      });\n\n      if (newState.queue.length === 0) {\n        return newState;\n      }\n\n      return this.handleDismissOldest(newState);\n    });\n  };\n\n  render(): JSX.Element {\n    const { contextValue } = this.state;\n    const { domRoot, children, dense = false, Components = {}, classes } = this.props;\n\n    const categ = this.state.snacks.reduce<SnacksByPosition>((acc, current) => {\n      const category = originKeyExtractor(current.anchorOrigin);\n      const existingOfCategory = acc[category] || [];\n      return {\n        ...acc,\n        [category]: [...existingOfCategory, current]\n      };\n    }, {});\n\n    const snackbars = Object.keys(categ).map((origin) => {\n      const snacks = categ[origin];\n      const [nomineeSnack] = snacks;\n      return (\n        <SnackbarContainer key={origin} dense={dense} anchorOrigin={nomineeSnack.anchorOrigin} classes={classes}>\n          {snacks.map((snack) => (\n            <SnackbarItem\n              key={snack.id}\n              snack={snack}\n              classes={classes}\n              Component={Components[snack.variant]}\n              onClose={this.handleCloseSnack}\n              onEnter={this.props.onEnter}\n              onExit={this.props.onExit}\n              onExited={createChainedFunction([this.handleExitedSnack, this.props.onExited], snack.id)}\n              onEntered={createChainedFunction([this.handleEnteredSnack, this.props.onEntered], snack.id)}\n            />\n          ))}\n        </SnackbarContainer>\n      );\n    });\n\n    return (\n      <SnackbarContext.Provider value={contextValue}>\n        {children}\n        {domRoot ? createPortal(snackbars, domRoot) : snackbars}\n      </SnackbarContext.Provider>\n    );\n  }\n}\n\nexport default SnackbarProvider;\n","import { useContext } from 'react';\nimport SnackbarContext from './SnackbarContext';\nimport { ProviderContext } from './types';\n\nexport default (): ProviderContext => useContext(SnackbarContext);\n"],"names":["noOp","React","createContext","enqueueSnackbar","closeSnackbar","capitalise","text","charAt","toUpperCase","slice","originKeyExtractor","anchor","vertical","horizontal","isDefined","value","Transition","_React$Component","props","_this","call","initialStatus","appear","appearStatus","unmountOnExit","mountOnEnter","state","status","nextCallback","_inheritsLoose","getDerivedStateFromProps","_ref","prevState","_proto","prototype","componentDidMount","this","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","timeout","enter","exit","mounting","performEnter","performExit","setState","isAppearing","timeouts","onEnter","node","safeSetState","_this2","onEntering","onTransitionEnd","onEntered","onExit","_this3","onExiting","onExited","cancel","nextState","callback","setNextCallback","active","_this4","handler","addEndListener","setTimeout","render","_this$props","children","_objectWithoutPropertiesLoose","_excluded","_createClass","key","get","_this$props$nodeRef","nodeRef","current","Error","Component","noop","setRef","ref","useForkRef","refA","refB","refValue","getTransitionProps","_props$style","style","duration","mode","easing","transitionTimingFunction","delay","transitionDelay","defaultProps","in","reflow","scrollTop","formatMs","milliseconds","Math","round","createTransition","options","_ref$duration","_ref$easing","_ref$delay","Array","isArray","map","animatedProp","formattedDuration","formattedDelay","join","ownerWindow","ownerDocument","document","defaultView","window","setTranslateValue","direction","transform","rect","getBoundingClientRect","containerWindow","fakeTransform","computedStyle","getComputedStyle","getPropertyValue","offsetX","offsetY","transformValues","split","parseInt","innerWidth","left","width","innerHeight","top","height","getTranslateValue","webkitTransform","Slide","_props$direction","inProp","_props$timeout","other","handleRefIntermediary","handleRef","updatePosition","handleResize","func","wait","debounced","args","_len","_key","arguments","later","apply","clearTimeout","clear","debounce","addEventListener","removeEventListener","TransitionComponent","transitionProps","_extends","webkitTransition","transition","childProps","visibility","undefined","displayName","SvgIcon","viewBox","focusable","fontSize","marginInlineEnd","userSelect","display","fill","flexShrink","WarningIcon","d","ErrorIcon","InfoIcon","defaults","maxSnack","persist","hideIconVariant","disableWindowBlurListener","variant","autoHideDuration","iconVariant","default","success","warning","error","info","anchorOrigin","transitionDuration","makeStyles","styles","Object","entries","reduce","acc","_extends2","css","ComponentClasses","classes","root","entered","Collapse","wrapperRef","getWrapperSize","clientHeight","wrapperSize","_getTransitionProps","_getTransitionProps2","className","clsx","pointerEvents","overflow","minHeight","right","bottom","toSnackbarAnchorOrigin","createChainedFunction","funcs","snackbarId","argums","concat","indexOf","push","useEnhancedEffect","useEventCallback","fn","Snackbar","_props$disableWindowB","onClose","id","open","_props$SnackbarProps","SnackbarProps","timerAutoHide","handleClose","setAutoHideTimer","autoHideDurationParam","handlePause","handleResume","onMouseEnter","event","onMouseLeave","_root","flexWrap","flexGrow","minWidth","SnackbarContent","forwardRef","backgroundColor","lineHeight","letterSpacing","color","alignItems","padding","borderRadius","boxShadow","lessPadding","paddingLeft","message","action","marginLeft","marginRight","MaterialDesignContent","forwardedRef","icon","role","memo","wrappedRoot","position","SnackbarItem","useRef","_useState","useState","collapsed","setCollapsed","snack","handleExitedScreen","useCallback","col","useEffect","allClasses","_props$Component","useMemo","containerClasses","containerRoot","containerAnchorOriginTopCenter","containerAnchorOriginBottomCenter","containerAnchorOriginTopRight","containerAnchorOriginBottomRight","containerAnchorOriginTopLeft","containerAnchorOriginBottomLeft","keys","filter","obj","keepSnackbarClassKeys","TransitionProps","componentOrFunctionContent","content","otherSnack","callbacks","cbName","requestClose","boxSizing","maxHeight","zIndex","indents","maxWidth","rootDense","_rootDense","flexDirection","_left","xsWidthMargin","_right","center","_center","_props$classes","dense","combinedClassname","isOptions","messageOrOptions","isValidElement","SnackbarProvider","_Component","optsOrUndefined","opts","preventDuplicate","hasSpecifiedKey","Date","getTime","random","merger","name","shouldObjectMerge","propsDuration","isNumberOrNull","numberish","optionsDuration","is","item","types","some","t","getTransitionDuration","merge","compareFunction","inQueue","queue","findIndex","inView","snacks","handleDisplaySnack","length","handleDismissOldest","processQueue","popped","ignore","reason","shouldCloseAll","_ref2","toBeClosed","find","handleCloseSnack","newState","contextValue","bind","domRoot","_this$props$dense","_this$props$Component","Components","categ","category","snackbars","origin","SnackbarContainer","handleExitedSnack","handleEnteredSnack","SnackbarContext","Provider","createPortal","useContext"],"mappings":"q0CAGA,IAAMA,EAAO,WACX,MAAO,MAGMC,EAAMC,cAA+B,CAClDC,gBAAiBH,EACjBI,cAAeJ,ICFXK,EAAa,SAACC,GAAY,OAAaA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,IAE1EC,EAAqB,SAACC,GAAqC,SACnEN,EAAWM,EAAOC,UAAYP,EAAWM,EAAOE,aAExCC,EAAY,SAACC,GAAyC,QAAgBA,GAAmB,IAAVA,sLCuCtFC,WAAWC,GAKf,SAAAD,EAAYE,SACVC,EAAAF,EAAAG,UAAMF,SAEN,IAEIG,EAFIC,EAAWJ,EAAXI,OAqBiB,OAjBzBH,EAAKI,aAAe,KAEhBL,KACEI,GACFD,EA/BO,SAgCPF,EAAKI,aA/BI,YAiCTF,EAhCQ,UAmCVA,EADSH,EAAMM,eAAiBN,EAAMO,aArC1B,YACH,SA0CXN,EAAKO,MAAQ,CAAEC,OAAQN,GAEvBF,EAAKS,aAAe,KAAKT,EAC1BU,EAAAb,EAAAC,GAAAD,EAUMc,yBAAP,SAAAC,EAA0EC,GACxE,OAD0CD,MAxD5B,cAyDAC,EAAUL,OACf,CAAEA,OAzDA,UA2DJ,MACR,IAAAM,EAAAjB,EAAAkB,UAuMA,OAvMAD,EAEDE,kBAAA,WACEC,KAAKC,cAAa,EAAMD,KAAKb,eAC9BU,EAEDK,mBAAA,SAAmBC,GACjB,IAAIC,EAAsC,KAC1C,GAAID,IAAcH,KAAKlB,MAAO,CAC5B,IAAQS,EAAWS,KAAKV,MAAhBC,OAEJS,KAAKlB,SAtEE,aAuELS,GAtEI,YAsEmBA,IACzBa,EAxEO,YAAA,aA0EAb,GAzED,YAyEwBA,IAChCa,EAzEQ,WA4EZJ,KAAKC,cAAa,EAAOG,IAC1BP,EAEDQ,qBAAA,WACEL,KAAKM,sBACNT,EAEDU,YAAA,WACE,IAAQC,EAAYR,KAAKlB,MAAjB0B,QACJC,EAAQD,EACRE,EAAOF,EAMX,OAJe,MAAXA,GAAsC,iBAAZA,GAA2C,iBAAZA,IAC3DE,EAAOF,EAAQE,KACfD,EAAQD,EAAQC,OAEX,CACLC,KAAMA,EACND,MAAOA,IAEVZ,EAEDI,aAAA,SAAaU,EAAkBP,YAAlBO,IAAAA,GAAW,GACH,OAAfP,GACFJ,KAAKM,qBAtGM,aAwGPF,EACFJ,KAAKY,aAAaD,GAElBX,KAAKa,eAEEb,KAAKlB,MAAMM,eA9GX,WA8G4BY,KAAKV,MAAMC,QAChDS,KAAKc,SAAS,CAAEvB,OAhHJ,eAkHfM,EAEDe,aAAA,SAAaD,cACHF,EAAUT,KAAKlB,MAAf2B,MACFM,EAAcJ,EAEdK,EAAWhB,KAAKO,cAEjBI,GAAaF,GASdT,KAAKlB,MAAMmC,SACbjB,KAAKlB,MAAMmC,QAAQjB,KAAKkB,KAAMH,GAGhCf,KAAKmB,aAAa,CAAE5B,OArIP,aAqI2B,WAClC6B,EAAKtC,MAAMuC,YACbD,EAAKtC,MAAMuC,WAAWD,EAAKF,KAAMH,GAGnCK,EAAKE,gBAAgBN,EAASP,OAAO,WACnCW,EAAKD,aAAa,CAAE5B,OA1IZ,YA0I+B,WACjC6B,EAAKtC,MAAMyC,WACbH,EAAKtC,MAAMyC,UAAUH,EAAKF,KAAMH,aApBtCf,KAAKmB,aAAa,CAAE5B,OAxHV,YAwH6B,WACjC6B,EAAKtC,MAAMyC,WACbH,EAAKtC,MAAMyC,UAAUH,EAAKF,KAAMH,OAuBvClB,EAEDgB,YAAA,sBACUH,EAASV,KAAKlB,MAAd4B,KACFM,EAAWhB,KAAKO,cAGjBG,GASDV,KAAKlB,MAAM0C,QACbxB,KAAKlB,MAAM0C,OAAOxB,KAAKkB,MAGzBlB,KAAKmB,aAAa,CAAE5B,OApKR,YAoK2B,WACjCkC,EAAK3C,MAAM4C,WACbD,EAAK3C,MAAM4C,UAAUD,EAAKP,MAG5BO,EAAKH,gBAAgBN,EAASN,MAAM,WAClCe,EAAKN,aAAa,CAAE5B,OA7Kb,WA6K+B,WAChCkC,EAAK3C,MAAM6C,UACbF,EAAK3C,MAAM6C,SAASF,EAAKP,gBApB/BlB,KAAKmB,aAAa,CAAE5B,OA3JX,WA2J6B,WAChCkC,EAAK3C,MAAM6C,UACbF,EAAK3C,MAAM6C,SAASF,EAAKP,UAuBhCrB,EAEDS,mBAAA,WAC4B,OAAtBN,KAAKR,cAAyBQ,KAAKR,aAAaoC,SAClD5B,KAAKR,aAAaoC,SAClB5B,KAAKR,aAAe,OAEvBK,EAEDsB,aAAA,SAAaU,EAAkBC,GAC7BA,EAAW9B,KAAK+B,gBAAgBD,GAChC9B,KAAKc,SAASe,EAAWC,IAC1BjC,EAEDkC,gBAAA,SAAgBD,cACVE,GAAS,EAeb,OAbAhC,KAAKR,aAAe,WACdwC,IACFA,GAAS,EACTC,EAAKzC,aAAe,KAEpBsC,MAIH9B,KAAKR,aAA8BoC,OAAS,WAC3CI,GAAS,GAGJhC,KAAKR,cACbK,EAEDyB,gBAAA,SAAgBd,EAAiB0B,GAC/BlC,KAAK+B,gBAAgBG,IAEhBlC,KAAKkB,MADsC,MAAXV,IAAoBR,KAAKlB,MAAMqD,eAElEC,WAAWpC,KAAKR,aAA8B,IAI5CQ,KAAKlB,MAAMqD,gBACbnC,KAAKlB,MAAMqD,eAAenC,KAAKkB,KAAMlB,KAAKR,cAG7B,MAAXgB,GACF4B,WAAWpC,KAAKR,aAA8BgB,KAEjDX,EAEDwC,OAAA,WACE,IAAQ9C,EAAWS,KAAKV,MAAhBC,OAER,GA1Oc,cA0OVA,EACF,OAAO,KAGT,IAAA+C,EAmBItC,KAAKlB,MAET,OAAOyD,EApBGD,EAARC,UAoBchD,EAHDiD,EAAAF,EAAAG,KAIhBC,EAAA9D,IAAA+D,WAAAC,IApND,iBACQ1B,UAAI2B,EAAG7C,KAAKlB,MAAMgE,mBAAOD,SAAlBA,EAAoBE,QACjC,IAAK7B,EACH,MAAM,IAAI8B,MAAM,mDAElB,OAAO9B,OArCcrD,EAAMoF,WAuP/B,SAASC,KC9RT,SAASC,EAAUC,EAA2FzE,GACzF,mBAARyE,EACTA,EAAIzE,GACKyE,IACTA,EAAIL,QAAUpE,YAIM0E,EACtBC,EACAC,GAOA,OAAO1F,WAAc,WACnB,OAAY,MAARyF,GAAwB,MAARC,EACX,KAEF,SAACC,GACNL,EAAOG,EAAME,GACbL,EAAOI,EAAMC,MAEd,CAACF,EAAMC,aCnBYE,EAAmB3E,GACzC,IAAQ0B,EAA8B1B,EAA9B0B,QAAOkD,EAAuB5E,EAArB6E,MAAAA,WAAKD,EAAG,GAAEA,EAC3B,MAAO,CACLE,SAA6B,iBAAZpD,EAAuBA,EAFJ1B,EAAT+E,OAE8B,EAAIrD,EAC7DsD,OAAQH,EAAMI,yBACdC,MAAOL,EAAMM,iBFuRhBrF,EAAmBsF,aAAe,CACjCC,IAAI,EACJ9E,cAAc,EACdD,eAAe,EACfF,QAAQ,EACRuB,OAAO,EACPC,MAAM,EAENO,QAASiC,EACT7B,WAAY6B,EACZ3B,UAAW2B,EAEX1B,OAAQ0B,EACRxB,UAAWwB,EACXvB,SAAUuB,GGzTZ,IAeakB,EAAS,SAAClD,GAIrBA,EAAKmD,UAAYnD,EAAKmD,WCdlBC,EAAW,SAACC,GAAoB,OAAQC,KAAKC,MAAMF,kBAEjCG,EAAiB5F,EAAoC6F,YAApC7F,IAAAA,EAA2B,CAAC,QACnE,IAAAa,EAAwEgF,GAAW,GAAEC,EAAAjF,EAA7EiE,SAAAA,WAAQgB,EAAG,IAAGA,EAAAC,EAAAlF,EAAEmE,OAAAA,WAAMe,EDNnB,+BCM6CA,EAAAC,EAAAnF,EAAEqE,MAAAA,WAAKc,EAAG,EAACA,EAInE,OAFmBC,MAAMC,QAAQlG,GAASA,EAAQ,CAACA,IAGhDmG,KAAI,SAACC,GACJ,IAAMC,EAAwC,iBAAbvB,EAAwBA,EAAWU,EAASV,GACvEwB,EAAkC,iBAAVpB,EAAqBA,EAAQM,EAASN,GACpE,OAAUkB,MAAgBC,MAAqBrB,MAAUsB,KAE1DC,KAAK,qGCNV,SAASC,EAAYpE,GAEnB,OANF,SAAuBA,GACrB,OAAQA,GAAQA,EAAKqE,eAAkBC,SAI3BD,CAAcrE,GACfuE,aAAeC,OA+D5B,SAASC,EAAkBC,EAAqC1E,GAC9D,GAAKA,EAAL,CACA,IAAM2E,EApCR,SAA2BD,EAAqC1E,GAC9D,IAEI2E,EAFEC,EAAO5E,EAAK6E,wBACZC,EAAkBV,EAAYpE,GAGpC,GAAIA,EAAK+E,cACPJ,EAAY3E,EAAK+E,kBACZ,CACL,IAAMC,EAAgBF,EAAgBG,iBAAiBjF,GACvD2E,EAAYK,EAAcE,iBAAiB,sBAAwBF,EAAcE,iBAAiB,aAGpG,IAAIC,EAAU,EACVC,EAAU,EAEd,GAAIT,GAA2B,SAAdA,GAA6C,iBAAdA,EAAwB,CACtE,IAAMU,EAAkBV,EAAUW,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGA,MAAM,KACpEH,EAAUI,SAASF,EAAgB,GAAI,IACvCD,EAAUG,SAASF,EAAgB,GAAI,IAGzC,OAAQX,GACN,IAAK,OACH,qBAAqBI,EAAgBU,WAAaL,EAAUP,EAAKa,YACnE,IAAK,QACH,sBAAsBb,EAAKa,KAAOb,EAAKc,MAAQP,SACjD,IAAK,KACH,qBAAqBL,EAAgBa,YAAcP,EAAUR,EAAKgB,WACpE,QAEE,sBAAsBhB,EAAKgB,IAAMhB,EAAKiB,OAAST,UAMjCU,CAAkBpB,EAAW1E,GAC3C2E,IACF3E,EAAKyC,MAAMsD,gBAAkBpB,EAC7B3E,EAAKyC,MAAMkC,UAAYA,IAI3B,IAAMqB,EAAQrJ,cAA2C,SAACiB,EAAOsE,GAC/D,IAAQb,EAAiHzD,EAAjHyD,SAAQ4E,EAAyGrI,EAAvG8G,UAAAA,WAASuB,EAAG,OAAMA,EAAMC,EAA+EtI,KAAvE6E,EAAuE7E,EAAvE6E,MAAK0D,EAAkEvI,EAAhE0B,QAAAA,WAAO6G,EAAG,EAACA,EAAEpG,EAAmDnC,EAAnDmC,QAASM,EAA0CzC,EAA1CyC,UAAWC,EAA+B1C,EAA/B0C,OAAQG,EAAuB7C,EAAvB6C,SAAa2F,EAAK9E,EAAK1D,EAAK2D,GAExHK,EAAUjF,SAAa,MACvB0J,EAAwBlE,EAAYd,EAAiBa,IAAKN,GAC1D0E,EAAYnE,EAAWkE,EAAuBnE,GAsD9CqE,EAAiB5J,eAAkB,WACnCiF,EAAQC,SACV4C,EAAkBC,EAAW9C,EAAQC,WAEtC,CAAC6C,IA8BJ,OA5BA/H,aAAgB,WAEd,IAAIuJ,GAAwB,SAAdxB,GAAsC,UAAdA,EAAtC,CAIA,IAAM8B,EAxIV,SAAkBC,EAAkBC,GAClC,IAAIpH,EACJ,SAASqH,sCAAaC,MAAW/C,MAAAgD,GAAAC,IAAAA,EAAAD,EAAAC,IAAXF,EAAWE,GAAAC,UAAAD,GAC/B,IAAME,EAAQ,WAEZP,EAAKQ,MAAMpJ,EAAM+I,IAEnBM,aAAa5H,GACbA,EAAU4B,WAAW8F,EAAON,GAO9B,gBAfkCA,IAAAA,EAAO,KAWzCC,EAAUQ,MAAQ,WAChBD,aAAa5H,IAGRqH,EAyHgBS,EAAS,WACxBxF,EAAQC,SACV4C,EAAkBC,EAAW9C,EAAQC,YAInCiD,EAAkBV,EAAYxC,EAAQC,SAE5C,OADAiD,EAAgBuC,iBAAiB,SAAUb,GACpC,WACLA,EAAaW,QACbrC,EAAgBwC,oBAAoB,SAAUd,OAE/C,CAAC9B,EAAWwB,IAEfvJ,aAAgB,WACTuJ,GAGHK,MAED,CAACL,EAAQK,IAGV5J,gBAAC4K,iBACCvJ,UACA4D,QAASA,EACT7B,QA1F4C,SAACC,EAAMH,GACrD4E,EAAkBC,EAAW1E,GAC7BkD,EAAOlD,GAEHD,GACFA,EAAQC,EAAMH,IAsFdQ,UAAWA,EACXF,WAnFmB,SAACH,GACtB,IACMwH,EAAkBjF,EAAmB,CACzCjD,QAAAA,EACAqD,KAAM,QACNF,MAAKgF,KAAOhF,GAAOI,0BAJNJ,MAAAA,SAAAA,EAAOI,2BFlGf,mCEyGP7C,EAAKyC,MAAMiF,iBAAmBlE,EAAiB,oBAAqBgE,GACpExH,EAAKyC,MAAMkF,WAAanE,EAAiB,YAAagE,GAEtDxH,EAAKyC,MAAMsD,gBAAkB,OAC7B/F,EAAKyC,MAAMkC,UAAY,QAwErBrE,OArE0C,SAACN,GAC7C,IACMwH,EAAkBjF,EAAmB,CACzCjD,QAAAA,EACAqD,KAAM,OACNF,MAAKgF,KAAOhF,GAAOI,0BAJNJ,MAAAA,SAAAA,EAAOI,2BF7GjB,mCEoHL7C,EAAKyC,MAAMiF,iBAAmBlE,EAAiB,oBAAqBgE,GACpExH,EAAKyC,MAAMkF,WAAanE,EAAiB,YAAagE,GAEtD/C,EAAkBC,EAAW1E,GAEzBM,GACFA,EAAON,IAwDPS,SApD8C,SAACT,GAEjDA,EAAKyC,MAAMiF,iBAAmB,GAC9B1H,EAAKyC,MAAMkF,WAAa,GAEpBlH,GACFA,EAAST,IA+CTiD,GAAIiD,EACJ5G,QAASA,GACL8G,IAEH,SAAChI,EAAOwJ,GAAU,OACjBjL,eAAmB0E,EAAeoG,GAChCvF,IAAKoE,EACL7D,MAAKgF,GACHI,WAAsB,WAAVzJ,GAAuB8H,OAAoB4B,EAAX,UACzCrF,EACCpB,EAAiBzD,MAAM6E,QAE1BmF,UAOb5B,EAAM+B,YAAc,QChNpB,IAAMC,EAAU,SAACpK,GAAgC,OAC/CjB,qCACEsL,QAAQ,YACRC,UAAU,QACVzF,MAAO,CACL0F,SAAU,GACVC,gBAAiB,EACjBC,WAAY,OACZ3C,MAAO,MACPG,OAAQ,MACRyC,QAAS,eACTC,KAAM,eACNC,WAAY,IAEV5K,KAaF6K,EAAwB,WAAb,OACf9L,gBAACqL,OACCrL,wBAAM+L,EAAE,wDAINC,EAAsB,WAAb,OACbhM,gBAACqL,OACCrL,wBACE+L,EAAE,mOAOFE,EAAqB,WAAb,OACZjM,gBAACqL,OACCrL,wBACE+L,EAAE,yHC5CKG,EAAW,CACtBC,SAAU,EACVC,SAAS,EACTC,iBAAiB,EACjBC,2BAA2B,EAC3BC,QAAS,UACTC,iBAAkB,IAClBC,YD2C2D,CAC3DC,aAASvB,EACTwB,QAAS3M,iBApCiB,WAAb,OACbA,gBAACqL,OACCrL,wBACE+L,EAAE,0IAkCNa,QAAS5M,gBAAC8L,QACVe,MAAO7M,gBAACgM,QACRc,KAAM9M,gBAACiM,SC/CPc,aAAc,CAAEpM,SAAU,SAAUC,WAAY,QAChDgK,oBAAqBvB,EACrB2D,mBAAoB,CAClBpK,MAAO,IACPC,KAAM,eCdMoK,EAKdC,GACA,OAAOC,OAAOC,QAAQF,GAAQG,QAC5B,SAACC,EAAGxL,GAAA,IAAAyL,EAAa,OAAAzC,KACZwC,IAAGC,MADEzL,MAED0L,MAFQ1L,MAEEyL,MAEnB,IAIJ,IAAaE,EAKQ,SAAClB,GAAe,6BAA4BA,GCT3DmB,EAAUT,EAAW,CACzBU,KAAM,CACJzE,OAAQ,GAEV0E,QAAS,CACP1E,OAAQ,UAaN2E,EAAW7N,cAAgD,SAACiB,EAAOsE,GACvE,IAAQb,EAAmCzD,EAAnCyD,SAAc6E,EAAqBtI,KAAb6C,EAAa7C,EAAb6C,SAExBgK,EAAa9N,SAA6B,MAE1CiF,EAAUjF,SAA6B,MACvC2J,EAAYnE,EAAWD,EAAKN,GAE5B8I,EAAiB,WAAH,OAAUD,EAAW5I,QAAU4I,EAAW5I,QAAQ8I,aAAe,GAyCrF,OACEhO,gBAAC4K,GACCtE,GAAIiD,EACJhI,iBACA6B,QA3C4C,SAACC,GAC/CA,EAAKyC,MAAMoD,OApBO,OA+DhBxF,UA1BgD,SAACL,GACnDA,EAAKyC,MAAMoD,OAAS,QA0BlB1F,WAzCmB,SAACH,GACtB,IAAM4K,EAAcF,IAEpBG,EAAiDtI,EAAmB,CAClEjD,QA1BU,IA2BVqD,KAAM,UAFUgH,EAAkBkB,EAA5BnI,SAA8BE,EAAMiI,EAANjI,OAKtC5C,EAAKyC,MAAMkH,mBAAmD,iBAAvBA,EAAkCA,EAAwBA,OAEjG3J,EAAKyC,MAAMoD,OAAY+E,OACvB5K,EAAKyC,MAAMI,yBAA2BD,GAAU,IA+B9CtC,OAxB0C,SAACN,GAC7CA,EAAKyC,MAAMoD,OAAY6E,UAwBrBjK,SAAUA,EACVD,UAtBkB,SAACR,GACrBkD,EAAOlD,GAEP,IAAA8K,EAAiDvI,EAAmB,CAClEjD,QAhDU,IAiDVqD,KAAM,SAFUgH,EAAkBmB,EAA5BpI,SAA8BE,EAAMkI,EAANlI,OAKtC5C,EAAKyC,MAAMkH,mBAAmD,iBAAvBA,EAAkCA,EAAwBA,OACjG3J,EAAKyC,MAAMoD,OAtDO,MAuDlB7F,EAAKyC,MAAMI,yBAA2BD,GAAU,IAa9ChB,QAASA,EACTtC,QApEU,MAsET,SAAClB,EAAOwJ,GAAU,OACjBjL,qCACEuF,IAAKoE,EACLyE,UAAWC,EAAKX,EAAQC,KAAqC,YAAVlM,GAAlBiM,EAAQE,SACzC9H,MAAKgF,GACHwD,cAAe,MACfC,SAAU,SACVC,UA9EU,MA+EVxD,WAAYnE,EAAiB,WACf,YAAVpF,GAAuB,CACzB8M,SAAU,WAEE,WAAV9M,IACD8H,GAAU,CACT2B,WAAY,YAGdD,GAEJjL,uBACEuF,IAAKuI,EACLM,UD9FO,2BCgGPtI,MAAO,CAAE6F,QAAS,OAAQ5C,MAAO,SAEhCrE,UAQbmJ,EAASzC,YAAc,WCnHvB,IAAMrD,EAAsD,CAC1D0G,MAAO,OACP3F,KAAM,QACN4F,OAAQ,KACRzF,IAAK,QAWM0F,EAAyB,SAAC5B,GAA4B,qBAClDtM,EAAmBsM,ICzB9BhN,EAAO,sBAWW6O,EACtBC,EACAC,GAGA,OAAOD,EAAMxB,QAAO,SAACC,EAAKxD,GACxB,OAAIA,MAAAA,EACKwD,EAGF,sCAA4BrD,MAAI/C,MAAAgD,GAAAC,IAAAA,EAAAD,EAAAC,IAAJF,EAAIE,GAAAC,UAAAD,GACrC,IAAM4E,KAAMC,OAAO/E,GACf6E,IAA8C,IAAhCC,EAAOE,QAAQH,IAC/BC,EAAOG,KAAKJ,GAGdxB,EAAIhD,MAAMnI,KAAM4M,GAChBjF,EAAKQ,MAAMnI,KAAM4M,MAElBhP,GC5BL,IAEMoP,EAAsC,oBAAXtH,OAAyB7H,kBAAwBA,qBAE1DoP,EAAiDC,GACvE,IAAM9J,EAAMvF,SAAaqP,GAIzB,OAHAF,GAAkB,WAChB5J,EAAIL,QAAUmK,KAETrP,eACL,WAAA,OAEMuF,EAAW,QAAA+E,aAAAF,aACjB,ICdJ,IAeMkF,EAAWtP,cAAgD,SAACiB,EAAOsE,GACvE,IAAQb,EAAoHzD,EAApHyD,SAAU0J,EAA0GnN,EAA1GmN,UAAW5B,EAA+FvL,EAA/FuL,iBAAgB+C,EAA+EtO,EAA7EqL,0BAAAA,WAAyBiD,GAAQA,EAAEC,EAA0CvO,EAA1CuO,QAASC,EAAiCxO,EAAjCwO,GAAIC,EAA6BzO,EAA7ByO,KAAIC,EAAyB1O,EAAvB2O,cAAAA,WAAaD,EAAG,GAAEA,EAEjHE,EAAgB7P,WAEhB8P,EAAcV,GAAiB,WAC/BI,GACFA,EAAOlF,aAAAF,cAIL2F,EAAmBX,GAAiB,SAACY,GACpCR,GAAoC,MAAzBQ,IAIZH,EAAc3K,SAChBqF,aAAasF,EAAc3K,SAE7B2K,EAAc3K,QAAUX,YAAW,WACjCuL,EAAY,KAAM,UAAWL,KAC5BO,OAGLhQ,aAAgB,WAKd,OAJI0P,GACFK,EAAiBvD,GAGZ,WACDqD,EAAc3K,SAChBqF,aAAasF,EAAc3K,YAG9B,CAACwK,EAAMlD,EAAkBuD,IAM5B,IAAME,EAAc,WACdJ,EAAc3K,SAChBqF,aAAasF,EAAc3K,UAQzBgL,EAAelQ,eAAkB,WACb,MAApBwM,GACFuD,EAAoC,GAAnBvD,KAElB,CAACA,EAAkBuD,IA8BtB,OAdA/P,aAAgB,WACd,IAAKsM,GAA6BoD,EAIhC,OAHA7H,OAAO6C,iBAAiB,QAASwF,GACjCrI,OAAO6C,iBAAiB,OAAQuF,GAEzB,WACLpI,OAAO8C,oBAAoB,QAASuF,GACpCrI,OAAO8C,oBAAoB,OAAQsF,MAKtC,CAAC3D,EAA2B4D,EAAcR,IAG3C1P,qCACEuF,IAAKA,GACDqK,GACJxB,UAAWC,ELvFL,oBKuFqCD,GAC3C+B,aAjC8D,SAACC,GAC7DR,EAAcO,cAChBP,EAAcO,aAAaC,GAE7BH,KA8BEI,aA3B8D,SAACD,GAC7DR,EAAcS,cAChBT,EAAcS,aAAaD,GAE7BF,OAyBGxL,MAKP4K,EAASlE,YAAc,iCC7GjBsC,EAAUT,EAAW,CACzBU,MAAI2C,GACF3E,QAAS,OACT4E,SAAU,OACVC,SAAU,GAACF,EfNP,4BeOgB,CAClBE,SAAU,UACVC,SAAU,SACXH,KAICI,EAAkBC,cAAiD,SAAA7O,EAA0ByD,GAAG,IAA1B6I,EAAStM,EAATsM,UAAcnN,EAAK0D,EAAA7C,EAAA8C,GAAA,OAC7F5E,qCAAKuF,IAAKA,EAAK6I,UAAWC,EAAKX,EAAQC,KAAMS,IAAgBnN,OAG/DyP,EAAgBtF,YAAc,kBChB9B,IAAMsC,EAAUT,EAAW,CACzBU,KAAM,CACJiD,gBAAiB,UACjBpF,SAAU,WACVqF,WAAY,KACZC,cAAe,YACfC,MAAO,OACPC,WAAY,SACZC,QAAS,WACTC,aAAc,MACdC,UAAW,wGAEbC,YAAa,CACXC,YAAgB,QAElB3E,QAAS,CACPkE,gBAAiB,WAEnBjE,QAAS,CACPiE,gBAAiB,WAEnB/D,MAAO,CACL+D,gBAAiB,WAEnBhE,QAAS,CACPgE,gBAAiB,WAEnB9D,KAAM,CACJ8D,gBAAiB,WAEnBU,QAAS,CACP3F,QAAS,OACTqF,WAAY,SACZC,QAAS,SAEXM,OAAQ,CACN5F,QAAS,OACTqF,WAAY,SACZQ,WAAY,OACZH,YAAa,OACbI,YAAa,UAMXC,EAAwBf,cAA+C,SAAC1P,EAAO0Q,GACnF,IAAYL,EAAwGrQ,EAAxGqQ,QAAyD/E,EAA+CtL,EAA/CsL,QAASF,EAAsCpL,EAAtCoL,gBAAiBvG,EAAqB7E,EAArB6E,MAAOsI,EAAcnN,EAAdmN,UAEhGwD,EAF8G3Q,EAA5DwL,YAE/BF,GAErBgF,EAJgHtQ,EAA/FsQ,OASrB,MAJsB,mBAAXA,IACTA,EAASA,EANyGtQ,EAA5GwO,KAUNzP,gBAAC0Q,GACCnL,IAAKoM,EACLE,KAAK,2BAfa,oBAiBlB/L,MAAOA,EACPsI,UAAWC,EP/CH,sBOiDNZ,EAAmClB,GACnCmB,EAAQC,KAERD,EAAQnB,GACR6B,GAF0B/B,GAAmBuF,GAA1ClE,EAAQ0D,cAKbpR,uBAAKyP,GA3Ba,oBA2BQrB,UAAWV,EAAQ4D,SACzCjF,EAAyB,KAAPuF,EACnBN,GAEFC,GAAUvR,uBAAKoO,UAAWV,EAAQ6D,QAASA,OAKlDG,EAAsBtG,YAAc,wBAEpC,oBAAe0G,OAAKJ,qMC9EdxE,GAASD,EAAW,CACxB8E,YAAa,CACXhJ,MAAO,OACPiJ,SAAU,WACVhK,UAAW,gBACXiB,IAAK,EACLwF,MAAO,EACPC,OAAQ,EACR5F,KAAM,EACN2H,SAAU,WAYRwB,GAA4C,SAAChR,GACjD,IAAM0B,EAAUuP,WAChBC,EAAkCC,YAAS,GAApCC,EAASF,KAAEG,EAAYH,KAExBrC,EAAmDlB,EAAsB,CAAC3N,EAAMsR,MAAM/C,QAASvO,EAAMuO,UAQrGgD,EAAqBC,eAAY,WACrC9P,EAAQuC,QAAUX,YAAW,WAC3B+N,GAAa,SAACI,GAAG,OAAMA,OACtB,OACF,IAEHC,aACE,WAAA,OAAM,WACAhQ,EAAQuC,SACVqF,aAAa5H,EAAQuC,YAGzB,IAGF,INxCgC6H,EMwCxBwF,EAAkEtR,EAAlEsR,MAAgBK,EAAkD3R,EAA3DyM,QAAOmF,EAAoD5R,EAAtCmE,UAAAA,WAASyN,EAAGnB,GAAqBmB,EAE/DnF,EAAUoF,WAAQ,WAAA,ON5BW,SAACpF,YAAAA,IAAAA,EAA4C,IAChF,IAAMqF,EAAoD,CACxDC,eAAe,EACfC,gCAAgC,EAChCC,mCAAmC,EACnCC,+BAA+B,EAC/BC,kCAAkC,EAClCC,8BAA8B,EAC9BC,iCAAiC,GAEnC,OAAQnG,OAAOoG,KAAK7F,GACjB8F,QAAO,SAAC1O,GAAG,OAAMiO,EAAiBjO,MAClCuI,QAAO,SAACoG,EAAK3O,GAAG,IAAAyI,EAAA,OAAAzC,KAAW2I,IAAGlG,MAAGzI,GAAM4I,EAAQ5I,GAAIyI,MAAK,IMgB7BmG,CAAsBd,KAAa,CAACA,IAGhElD,EAcE6C,EAdF7C,KACAE,EAaE2C,EAbF3C,cACAhF,EAYE2H,EAZF3H,oBACA+I,EAWEpB,EAXFoB,gBACA3G,EAUEuF,EAVFvF,mBACAV,EASEiG,EATFjG,0BACSsH,EAQPrB,EARFsB,QAOGC,EAAUnP,EACX4N,EAAK3N,IAEHiG,EAAeC,GACnB/C,WN9D8BgF,EM8DD+G,EAAW/G,aN7DV,WAA5BA,EAAanM,WACRmH,EAAUgF,EAAanM,YAEzBmH,EAAUgF,EAAapM,WM2D5BgC,QAASqK,GACN2G,GAGDE,EAAUD,EACS,mBAAZC,IACTA,EAAUA,EAAQC,EAAWrE,GAAIqE,EAAWxC,UAG9C,IAAMyC,EACJ,CAAC,UAAW,YAAa,SAAU,YACnC1G,QACA,SAACC,EAAK0G,GAAM,IAAAzG,EAAA,OAAAzC,KACPwC,IAAGC,MACLyG,GAASpF,EAAsB,CAAC3N,EAAMsR,MAAMyB,GAAgB/S,EAAM+S,IAAiBF,EAAWrE,IAAGlC,MAEpG,IAGF,OACEvN,gBAAC6N,GAASvH,GAAI+L,EAAWvO,SAAUiQ,EAAUjQ,UAC3C9D,gBAACsP,GACCI,KAAMA,EACND,GAAIqE,EAAWrE,GACfnD,0BAA2BA,EAC3BE,iBAAkBsH,EAAWtH,iBAC7B4B,UAAWC,EAAKnB,GAAO6E,YAAarE,EAAQC,KAAMD,EAAQiB,EAAuBmF,EAAW/G,gBAC5F6C,cAAeA,EACfJ,QAASM,GAET9P,gBAAC4K,mBACKC,GACJxJ,UACAiF,GAAIoJ,EACJ/L,OAAQoQ,EAAUpQ,OAClBG,SAAU0O,EACVpP,QAAS2Q,EAAU3Q,QAGnBM,UAAWkL,EAAsB,CAACmF,EAAUrQ,UAnFO,WACrDzC,EAAMsR,MAAM0B,cACdnE,EAAY,KAAM,aAAc7O,EAAMsR,MAAM9C,MAiF+BqE,EAAWrE,MAEhFoE,GAAkC7T,gBAACoF,mBAAc0O,QC1GvD5G,GAASD,EAAW,CACxBU,MAAI2C,GACF4D,UAAW,aACXvI,QAAS,OACTwI,UAAW,OACXnC,SAAU,QACVoC,OAAQ,KACRlL,OAAQ,OACRH,MAAO,OACPiC,WAAYnE,EAAiB,CAAC,MAAO,QAAS,SAAU,OAAQ,aAAc,CAC5Ed,SAAU,IACVE,OAAQ,SAIVqI,cAAe,QAAMgC,+BACF,CACjBW,QAAYoD,UACZrJ,WAAY,0BACbsF,EACDgE,6BAAiDhE,ElBjC3C,+BkBkCgB,CACpBvH,MAAO,OACPuL,8BACDhE,GAEHiE,WAASC,KAAAA,+BACY,CACjBvD,QAAYoD,WACbG,GAEHvL,IAAK,CACHA,IAAQoL,OACRI,cAAe,UAEjB/F,OAAQ,CACNA,OAAW2F,OACXI,cAAe,kBAEjB3L,MAAI4L,IACF5L,KAASuL,QAAwBK,GlBpD7B,4BkBqDgB,CAClB1D,WAAY,cACb0D,GlBxDK,+BkByDgB,CACpB5L,KAAS6L,QACVD,IAEHjG,OAAKmG,IACHnG,MAAU4F,QAAwBO,GlB7D9B,4BkB8DgB,CAClB5D,WAAY,YACb4D,GlBjEK,+BkBkEgB,CACpBnG,MAAUkG,QACXC,IAEHC,QAAMC,IACJhM,KAAM,MACNd,UAAW,oBAAkB8M,GlBvEzB,4BkBwEgB,CAClB9D,WAAY,UACb8D,SA2BUhD,QAhB6C,SAAC7Q,GAC3D,IAAA8T,EAAwD9T,EAAhDyM,QAAAA,WAAOqH,EAAG,GAAEA,EAAEhI,EAAkC9L,EAAlC8L,aAAciI,EAAoB/T,EAApB+T,MAAOtQ,EAAazD,EAAbyD,SAErCuQ,EAAoB5G,ET1EP,6BS4EjBnB,GAAOH,EAAapM,UACpBuM,GAAOH,EAAanM,YAEpBsM,GAAOS,KACPD,EAAQsF,cACRtF,0BAAgCjN,EAAmBsM,IAH7BiI,GAAnB9H,GAAOqH,WAMZ,OAAOvU,uBAAKoO,UAAW6G,GAAoBvQ,oCCjFvCwQ,GAAY,SAChBC,GAGA,QAD8C,iBAArBA,GAAiCC,iBAAeD,KAgBrEE,YAAiBC,GACrB,SAAAD,EAAYpU,SAYR,OAXFC,EAAAoU,EAAAnU,UAAMF,0BAsBU,SAChBkU,EACAI,GAEA,YAFAA,IAAAA,EAAiC,IAE7BJ,MAAAA,EACF,MAAM,IAAIhQ,MAAM,gDAGlB,IAAMqQ,EAAON,GAAUC,GAAoBA,EAAmBI,EAExDjE,EAAuC4D,GAAUC,GAAoBA,EAAiB7D,QAAU6D,EAE9FrQ,EAAsC0Q,EAAtC1Q,IAAK2Q,EAAiCD,EAAjCC,iBAAqB3O,EAAOnC,EAAK6Q,EAAI5Q,IAE5C8Q,EAAkB7U,EAAUiE,GAC5B2K,EAAKiG,EAAmB5Q,GAAsB,IAAI6Q,MAAOC,UAAYjP,KAAKkP,SAE1EC,EXfR,SAAChP,EAAc7F,GAAU,OACzB,SAAC8U,EAA2BC,GAC1B,gBAD0BA,IAAAA,GAAoB,GAC1CA,EACFlL,KACMoB,EAAiB6J,GAClB9U,EAAM8U,GACNjP,EAAQiP,IAIF,qBAATA,GApD2CE,EAqDQhV,EAAMuL,kBApDzD0J,EAAiB,SAACC,GAAwB,MAA0B,iBAAdA,GAAwC,OAAdA,IAD3DC,EAqDItP,EAAQ0F,kBAlDK4J,EACxCF,EAAeD,GAAuBA,EACnC/J,EAASM,kBAmDD,uBAATuJ,EA5CsB,SAACK,EAAsBH,GACnD,IAAMI,EAAK,SAACC,EAAWC,GAAe,OAAKA,EAAMC,MAAK,SAACC,GAAC,cAAYH,IAASG,MAE7E,OAAIJ,EAAGD,EAAiB,CAAC,SAAU,WAC1BA,EAGLC,EAAGD,EAAiB,CAAC,WACvBtL,KACKoB,EAASc,mBACRqJ,EAAGJ,EAAe,CAAC,YAAcA,EAClCG,GAIHC,EAAGJ,EAAe,CAAC,SAAU,WACxBA,EAGLI,EAAGJ,EAAe,CAAC,WACrBnL,KACKoB,EAASc,mBACTiJ,GAIA/J,EAASc,mBAmBL0J,CAAsB5P,EAAQkG,mBAAoB/L,EAAM+L,oBAG1DlG,EAAQiP,IAAS9U,EAAM8U,IAAU7J,EAAiB6J,GA5DjC,IAACK,EAAsBH,EAC3CC,GWwDWS,CAAM7P,EAAS5F,EAAKD,OAC7BsR,EAAKzH,GACT2E,GAAAA,GACG3I,GACHwK,QAAAA,EACA5B,MAAM,EACN9B,SAAS,EACTqG,cAAc,EACd7H,QAAS0J,EAAO,WAChBvE,OAAQuE,EAAO,UACfjC,QAASiC,EAAO,WAChBvJ,QAASuJ,EAAO,WAChB/I,aAAc+I,EAAO,gBACrBxJ,0BAA2BwJ,EAAO,6BAClCtJ,iBAAkBsJ,EAAO,oBACzBzJ,gBAAiByJ,EAAO,mBACxBlL,oBAAqBkL,EAAO,uBAC5B9I,mBAAoB8I,EAAO,sBAC3BnC,gBAAiBmC,EAAO,mBAAmB,GAC3CrJ,YAAaqJ,EAAO,eAAe,GACnChQ,MAAOgQ,EAAO,SAAS,GACvBlG,cAAekG,EAAO,iBAAiB,GACvC1H,UAAWC,EAAKnN,EAAKD,MAAMmN,UAAWtH,EAAQsH,aAwBhD,OArBImE,EAAMnG,UACRmG,EAAM/F,sBAAmBrB,GAG3BjK,EAAK+B,UAAS,SAACxB,GACb,QAA0B0J,IAArBsK,GAAkCvU,EAAKD,MAAMwU,kBAAqBA,EAAkB,CACvF,IAAMmB,EAAkB,SAACN,GAAmB,OAAeZ,EAAkBY,EAAK7G,KAAOA,EAAK6G,EAAKhF,UAAYA,GAEzGuF,EAAUpV,EAAMqV,MAAMC,UAAUH,IAAoB,EACpDI,EAASvV,EAAMwV,OAAOF,UAAUH,IAAoB,EAC1D,GAAIC,GAAWG,EACb,OAAOvV,EAIX,OAAOP,EAAKgW,mBAAkBpM,KACzBrJ,GACHqV,SAAK9H,OAAMvN,EAAMqV,OAAOvE,UAIrB9C,GAOTvO,qBAA8B,SAACO,GAE7B,OADmBA,EAAXwV,OACGE,QAAUjW,EAAKiL,SACjBjL,EAAKkW,oBAAoB3V,GAE3BP,EAAKmW,aAAa5V,IAM3BP,eAAwB,SAACO,GACvB,IAAQqV,EAAkBrV,EAAlBqV,MACR,OAAIA,EAAMK,OAAS,EACjBrM,KACKrJ,GACHwV,UAAMjI,OAJgBvN,EAAXwV,QAISH,EAAM,KAC1BA,MAAOA,EAAMtW,MAAM,EAAGsW,EAAMK,UAGzB1V,GAWTP,sBAA+B,SAACO,GAC9B,GAAIA,EAAMwV,OAAOT,MAAK,SAACF,GAAI,OAAMA,EAAK5G,MAAQ4G,EAAKrC,gBACjD,OAAOxS,EAGT,IAAI6V,GAAS,EACTC,GAAS,EAEW9V,EAAMwV,OAAO5J,QAAO,SAACC,EAAKpI,GAAO,OAAKoI,GAAOpI,EAAQwK,MAAQxK,EAAQkH,QAAU,EAAI,KAAI,KAEvFlL,EAAKiL,WAE3BoL,GAAS,GAGX,IAAMN,EAASxV,EAAMwV,OAAO7P,KAAI,SAACkP,GAC/B,OAAKgB,GAAYhB,EAAKlK,UAAWmL,EAwBjCzM,KAAYwL,IAvBVgB,GAAS,EAEJhB,EAAK1I,SAON0I,EAAK9G,SACP8G,EAAK9G,QAAQ,KAAM,WAAY8G,EAAK7G,IAGlCvO,EAAKD,MAAMuO,SACbtO,EAAKD,MAAMuO,QAAQ,KAAM,WAAY8G,EAAK7G,IAG5C3E,KACKwL,GACH5G,MAAM,KAhBN5E,KACKwL,GACHrC,cAAc,QAqBtB,OAAAnJ,KAAYrJ,GAAOwV,OAAAA,KAMrB/V,qBAA0D,SAACmC,EAAMH,EAAa4B,GAC5E,IAAKjE,EAAUiE,GACb,MAAM,IAAIK,MAAM,0DAGlBjE,EAAK+B,UAAS,SAAAnB,GAAS,MAAQ,CAC7BmV,OADqBnV,EAANmV,OACA7P,KAAI,SAACkP,GAAI,OAAMA,EAAK7G,KAAO3K,EAAGgG,KAAQwL,GAAM1I,SAAS,IAAI9C,KAAUwL,WAOtFpV,mBAAwD,SAACkP,EAAOoH,EAAQ1S,GAGlE5D,EAAKD,MAAMuO,SACbtO,EAAKD,MAAMuO,QAAQY,EAAOoH,EAAQ1S,GAGpC,IAAM2S,OAAyBtM,IAARrG,EAEvB5D,EAAK+B,UAAS,SAAAyU,GAAA,IAAWZ,EAAKY,EAALZ,MAAK,MAAQ,CACpCG,OADqBS,EAANT,OACA7P,KAAI,SAACkP,GAClB,OAAKmB,GAAkBnB,EAAK7G,KAAO3K,EAIhBgG,KAAQwL,EAApBA,EAAK1I,SAAqB8B,MAAM,IAAqBuE,cAAc,IAHxEnJ,KAAYwL,MAKhBQ,MAAOA,EAAMtD,QAAO,SAAC8C,GAAI,OAAKA,EAAK7G,KAAO3K,UAO9C5D,gBAAkD,SAAC4D,GAEjD,IAAM6S,EAAazW,EAAKO,MAAMwV,OAAOW,MAAK,SAACtB,GAAI,OAAKA,EAAK7G,KAAO3K,KAC5DjE,EAAUiE,IAAQ6S,GAAcA,EAAWnI,SAC7CmI,EAAWnI,QAAQ,KAAM,aAAc1K,GAGzC5D,EAAK2W,iBAAiB,KAAM,aAAc/S,IAU5C5D,oBAAwD,SAACmC,EAAMyB,GAC7D,IAAKjE,EAAUiE,GACb,MAAM,IAAIK,MAAM,yDAGlBjE,EAAK+B,UAAS,SAACxB,GACb,IAAMqW,EAAW5W,EAAKmW,aAAYvM,KAC7BrJ,GACHwV,OAAQxV,EAAMwV,OAAOzD,QAAO,SAAC8C,GAAI,OAAKA,EAAK7G,KAAO3K,QAGpD,OAA8B,IAA1BgT,EAAShB,MAAMK,OACVW,EAGF5W,EAAKkW,oBAAoBU,OAhPlC5X,wBAAkBgB,EAAKhB,gBACvBC,sBAAgBe,EAAKf,cAErBe,EAAKO,MAAQ,CACXwV,OAAQ,GACRH,MAAO,GACPiB,aAAc,CACZ7X,gBAAiBgB,EAAKhB,gBAAgB8X,KAAI9W,GAC1Cf,cAAee,EAAKf,cAAc6X,KAAI9W,KAExCA,EAmRH,OAlRAU,EAAAyT,EAAAC,GAAAD,EAAApT,UAyODuC,OAAA,sBACUuT,EAAiB5V,KAAKV,MAAtBsW,aACRtT,EAAuEtC,KAAKlB,MAApEgX,EAAOxT,EAAPwT,QAASvT,EAAQD,EAARC,SAAQwT,EAAAzT,EAAEuQ,MAAAA,WAAKkD,GAAQA,EAAAC,EAAA1T,EAAE2T,WAAAA,WAAUD,EAAG,GAAEA,EAAEzK,EAAOjJ,EAAPiJ,QAErD2K,EAAQlW,KAAKV,MAAMwV,OAAO5J,QAAyB,SAACC,EAAKpI,SACvDoT,EAAW7X,EAAmByE,EAAQ6H,cAE5C,OAAAjC,KACKwC,IAAGC,MACL+K,MAAQtJ,OAHgB1B,EAAIgL,IAAa,IAGNpT,IAAOqI,MAE5C,IAEGgL,EAAYpL,OAAOoG,KAAK8E,GAAOjR,KAAI,SAACoR,GACxC,IAAMvB,EAASoB,EAAMG,GAErB,OACExY,gBAACyY,IAAkB3T,IAAK0T,EAAQxD,MAAOA,EAAOjI,aAFzBkK,KAEoDlK,aAAcW,QAASA,GAC7FuJ,EAAO7P,KAAI,SAACmL,GAAK,OAChBvS,gBAACiS,IACCnN,IAAKyN,EAAM9C,GACX8C,MAAOA,EACP7E,QAASA,EACTtI,UAAWgT,EAAW7F,EAAMhG,SAC5BiD,QAASjM,EAAKsU,iBACdzU,QAASG,EAAKtC,MAAMmC,QACpBO,OAAQJ,EAAKtC,MAAM0C,OACnBG,SAAU8K,EAAsB,CAACrL,EAAKmV,kBAAmBnV,EAAKtC,MAAM6C,UAAWyO,EAAM9C,IACrF/L,UAAWkL,EAAsB,CAACrL,EAAKoV,mBAAoBpV,EAAKtC,MAAMyC,WAAY6O,EAAM9C,aAOlG,OACEzP,gBAAC4Y,EAAgBC,UAAS/X,MAAOiX,GAC9BrT,EACAuT,EAAUa,eAAaP,EAAWN,GAAWM,IAGnD1T,EAAAwQ,IAAAvQ,eAAAC,IAhRD,WACE,OAAO5C,KAAKlB,MAAMkL,UAAYD,EAASC,cAjBZ/G,wJCpChB,OAAuB2T,aAAWH"}